{"version":3,"sources":["../node_modules/ev-emitter/ev-emitter.js","../node_modules/imagesloaded/imagesloaded.js","../node_modules/ogl/src/math/functions/Vec3Func.js","../node_modules/ogl/src/math/Vec3.js","../node_modules/ogl/src/core/Geometry.js","../node_modules/ogl/src/core/Program.js","../node_modules/ogl/src/core/Renderer.js","../node_modules/ogl/src/math/functions/Vec4Func.js","../node_modules/ogl/src/math/functions/QuatFunc.js","../node_modules/ogl/src/math/Quat.js","../node_modules/ogl/src/math/functions/Mat4Func.js","../node_modules/ogl/src/math/Mat4.js","../node_modules/ogl/src/math/functions/EulerFunc.js","../node_modules/ogl/src/math/Euler.js","../node_modules/ogl/src/core/Transform.js","../node_modules/ogl/src/core/Camera.js","../node_modules/ogl/src/math/functions/Mat3Func.js","../node_modules/ogl/src/math/Mat3.js","../node_modules/ogl/src/core/Mesh.js","../node_modules/ogl/src/core/Texture.js","../node_modules/ogl/src/core/RenderTarget.js","../node_modules/ogl/src/math/functions/ColorFunc.js","../node_modules/ogl/src/math/Color.js","../node_modules/ogl/src/math/functions/Vec2Func.js","../node_modules/ogl/src/math/Vec2.js","../node_modules/ogl/src/math/Vec4.js","../node_modules/ogl/src/extras/Plane.js","../node_modules/ogl/src/extras/Box.js","../node_modules/ogl/src/extras/Sphere.js","../node_modules/ogl/src/extras/Cylinder.js","../node_modules/ogl/src/extras/Triangle.js","../node_modules/ogl/src/extras/Torus.js","../node_modules/ogl/src/extras/Orbit.js","../node_modules/ogl/src/extras/Raycast.js","../node_modules/ogl/src/extras/Curve.js","../node_modules/ogl/src/extras/Post.js","../node_modules/ogl/src/extras/Animation.js","../node_modules/ogl/src/extras/Skin.js","../node_modules/ogl/src/extras/Text.js","../node_modules/ogl/src/extras/NormalProgram.js","../node_modules/ogl/src/extras/Flowmap.js","../node_modules/ogl/src/extras/GPGPU.js","../node_modules/ogl/src/extras/Polyline.js","../node_modules/ogl/src/extras/Shadow.js","../node_modules/ogl/src/extras/KTXTexture.js","../node_modules/ogl/src/extras/TextureLoader.js","../node_modules/ogl/src/extras/GLTFAnimation.js","../node_modules/ogl/src/extras/GLTFSkin.js","../node_modules/ogl/src/extras/GLTFLoader.js","../node_modules/ogl/src/index.mjs","utils.js","shaders/desktop.js","../node_modules/tornis/src/tornis.js","shaders/mobile.js","wave-effect.js","index.js"],"names":["EPSILON","length","a","x","y","z","Math","sqrt","copy","out","set","add","b","subtract","multiply","divide","scale","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","transformMat4","m","w","scaleRotateMat4","transformMat3","transformQuat","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","PI","acos","exactEquals","Vec3","Array","constructor","v","Vec3Func","va","vb","sub","squaredLen","equals","applyMatrix4","mat4","scaleRotateMatrix4","applyQuaternion","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","ATTR_ID","isBoundsWarned","Geometry","gl","attributes","canvas","console","error","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","key","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","target","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","buffer","createBuffer","updateAttribute","isInstanced","warn","min","index","max","boundBuffer","bindBuffer","bufferData","STATIC_DRAW","setIndex","value","setDrawRange","setInstancedCount","createVAO","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","name","numLoc","i","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","draw","mode","TRIANGLES","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","getPositionArray","position","computeBoundingBox","array","bounds","center","radius","Infinity","l","computeBoundingSphere","maxRadiusSq","remove","vao","deleteVertexArray","deleteBuffer","arrayCacheF32","Program","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","currentProgram","useProgram","activeUniform","undefined","texture","setUniform","update","textureUnits","push","CW","deleteProgram","flatten","setValue","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","arrayLen","valueLen","warnCount","message","Renderer","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","style","setViewport","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","identity","setAxisAngle","axis","rad","s","sin","cos","bw","rotateX","rotateY","rotateZ","slerp","omega","cosom","sinom","scale0","scale1","invert","a0","a1","a2","a3","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","vec4","Quat","onChange","QuatFunc","qA","qB","fromMatrix3","matrix3","fromAxisAngle","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","b0","b1","b2","b3","translate","rotate","c","b12","b20","b21","b22","hypot","abs","mat","getScaling","getMaxScaleOnAxis","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","yx","zx","zy","perspective","fovy","aspect","near","far","f","tan","nf","ortho","left","right","bottom","top","lr","bt","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","multiplyScalar","Mat4","Mat4Func","ma","mb","fromPerspective","fov","fromOrthogonal","fromQuaternion","setPosition","compose","pos","lookAt","fromRotationMatrix","asin","atan2","tmpMat4","Euler","reorder","EulerFunc","Transform","parent","children","matrix","matrixAutoUpdate","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","splice","force","updateMatrix","worldMatrixNeedsUpdate","callback","decompose","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","project","unproject","frustum","constant","invLen","geometry","frustumIntersectsSphere","normal","plane","fromMat4","normalFromMat4","projection","Mat3","Mat3Func","fromMatrix4","fromBasis","vec3a","vec3b","vec3c","getNormalMatrix","Mesh","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","cameraPosition","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","NAMES","black","white","red","green","blue","fuchsia","cyan","yellow","orange","hexToRGB","hex","rgb","exec","parseInt","numberToRGB","num","parseColor","arguments","toLowerCase","Color","isArray","ColorFunc","r","g","transformMat2","transformMat2d","Vec2","Vec2Func","applyMatrix3","mat3","Vec4","Vec4Func","Plane","widthSegments","heightSegments","wSegs","hSegs","numIndices","uv","Uint32Array","buildPlane","u","uDir","vDir","ii","io","segW","segH","iy","ix","d","Box","depthSegments","dSegs","Sphere","ceil","phiStart","phiLength","thetaStart","thetaLength","pStart","pLength","tStart","tLength","iv","te","grid","n","vRow","Cylinder","radiusTop","radiusBottom","radialSegments","openEnded","rSegs","numCaps","indexArray","addCap","isTop","sign","centerIndex","theta","cosTheta","sinTheta","addHeight","slope","indexRow","Triangle","Torus","tube","tubularSegments","arc","vertices","normals","uvs","indices","idx","STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","tempVec2a","tempVec2b","Orbit","object","element","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","getZoomScale","pow","mouseButtons","ORBIT","ZOOM","pan","deltaX","deltaY","el","body","targetDistance","panLeft","clientHeight","panUp","dolly","dollyScale","handleMoveRotate","handleMovePan","onMouseDown","e","button","clientX","clientY","window","addEventListener","onMouseMove","onMouseUp","handleMouseMoveDolly","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","touches","pageX","pageY","handleTouchStartDollyPan","dx","dy","onTouchMove","handleTouchMoveDollyPan","onTouchEnd","onContextMenu","passive","tempVec2c","tempVec3c","tempVec3d","tempVec3e","tempVec3f","tempVec3g","tempVec3h","tempVec3i","tempVec3j","tempVec3k","Raycast","origin","direction","castMouse","mouse","intersectBounds","meshes","output","invWorldMat4","hits","localMaxDistance","localDistance","raycast","intersectSphere","intersectBox","hit","localPoint","point","intersectMeshes","includeUV","includeNormal","closestFaceNormal","faceNormal","barycoord","uvA","uvB","uvC","closestA","closestB","closestC","end","ai","bi","ci","intersectTriangle","localFaceNormal","localNormal","getBarycoord","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","backfaceCulling","edge1","edge2","diff","DdN","DdQxE2","DdE1xQ","QdN","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","denom","invDenom","CATMULLROM","CUBICBEZIER","QUADRATICBEZIER","_a0","_a1","_a2","_a3","getCtrlPoint","points","last","getQuadraticBezierPoint","p0","c0","p1","ret","getCubicBezierPoint","c1","Curve","divisions","_getQuadraticBezierPoints","p","_getCubicBezierPoints","_getCatmullRomPoints","pop","getPoints","Post","targetOnly","options","passes","fbo","read","write","swap","resize","addPass","defaultVertex","defaultFragment","textureUniform","pass","enabledPasses","filter","prevPos","prevRot","prevScl","nextPos","nextRot","nextScl","Animation","objects","elapsed","weight","duration","frames","totalWeight","isSet","floorFrame","floor","blend","prevKey","nextKey","Skin","rig","createBones","createBoneTexture","animations","boneTexture","boneTextureSize","root","bones","bone","bindPose","bindInverse","log","LN2","boneMatrices","RGBA32F","addAnimation","animation","total","Text","font","text","align","letterSpacing","lineHeight","wordSpacing","wordBreak","_this","glyphs","buffers","fontHeight","baseline","newline","whitespace","createGeometry","common","base","chars","numChars","replace","layout","cursor","wordCursor","wordWidth","line","newLine","maxTimes","char","test","glyph","prevGlyph","kern","getKernPairOffset","advance","xadvance","numGlyphs","populateBuffers","texW","scaleW","texH","scaleH","lineIndex","xoffset","yoffset","h","uw","vh","numLines","id1","id2","kernings","first","second","amount","NormalProgram","Flowmap","falloff","dissipation","mask","createFBOs","HALF_FLOAT","HALF_FLOAT_OES","RGBA16F","velocity","tMap","uFalloff","uAlpha","uDissipation","uAspect","uMouse","uVelocity","GPGPU","initialData","dataLength","coords","floatArray","tmp","Polyline","prev","next","side","ind","updateGeometry","uResolution","resolution","uDPR","uThickness","thickness","uColor","uMiter","miter","Shadow","light","depthProgram","castMeshes","receive","cast","uniformProjection","uniformView","uniformTexture","colorProgram","isForceVisibility","KTXTexture","parseBuffer","ktx","KhronosTextureContainer","mipmaps","glInternalFormat","numberOfMipmapLevels","idCheck","BYTES_PER_ELEMENT","head","DataView","littleEndian","getUint32","glType","numberOfFaces","bytesOfKeyValueData","levelSize","Int32Array","face","cache","supportedExtensions","TextureLoader","load","support","getSupportedExtensions","ext","prop","includes","cacheID","loaded","loadKTX","loadImage","pvrtc","s3tc","etc","etc1","astc","detectWebP","fetch","then","res","arrayBuffer","decodeImage","imgBmp","powerOfTwo","close","clearCache","toDataURL","log2","Promise","resolve","img","Image","crossOrigin","isChrome","navigator","userAgent","createImageBitmap","onload","imageOrientation","tmpVec3A","tmpVec3B","tmpVec3C","tmpVec3D","tmpQuatA","tmpQuatB","tmpQuatC","tmpQuatD","GLTFAnimation","loop","reduce","times","transform","interpolation","values","prevIndex","findIndex","nextIndex","prevVal","prevTan","nextTan","nextVal","cubicSplineInterpolate","t2","t3","s2","s3","s0","s1","GLTFSkin","skeleton","joints","updateUniforms","_worldMatrix","TYPE_ARRAY","Int16Array","TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","ATTRIBUTES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","TRANSFORMS","translation","GLTFLoader","dir","desc","parseDesc","parse","asset","version","loadBuffers","bufferViews","parseBufferViews","images","parseImages","parseTextures","materials","parseMaterials","skins","parseSkins","parseMeshes","nodes","parseNodes","populateSkins","parseAnimations","scenes","parseScenes","json","glb","unpackGLB","header","Error","jsonChunkHeader","jsonByteLength","jsonText","TextDecoder","decode","JSON","jsonByteOffset","binaryChunkHeader","binaryByteOffset","binaryByteLength","binary","resolveURI","uri","all","map","primitives","accessors","bufferView","isAttribute","componentType","mimeType","bufferIndex","byteOffset","byteStride","extras","TypeArray","elementBytes","bufferViewIndex","blob","Blob","URL","createObjectURL","ready","sampler","samplerIndex","source","sourceIndex","samplers","pbrMetallicRoughness","normalTexture","occlusionTexture","emissiveTexture","emissiveFactor","alphaMode","alphaCutoff","doubleSided","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","inverseBindMatrices","parseAccessor","weights","meshIndex","numInstances","skinIndex","skin","parsePrimitives","material","materialIndex","targets","gltfMaterial","sparse","isFirstInstance","instanceCount","instanceMatrix","childIndex","joint","channels","input","inputIndex","outputIndex","nodeIndex","path","timesAcc","valuesAcc","nodesIndices","init","shaderTaggedTemplateLiteral","strings","exprs","acc","str","vert","frag","I","default","querySelector","frameID","previousTime","previousMouse","url","offsetWidth","offsetHeight","flowmap","computeAspect","imageAspect","naturalHeight","naturalWidth","windowAspect","ah","av","uRes","updateMouse","event","offsetX","offsetY","P","pageXOffset","offsetLeft","pageYOffset","offsetTop","performance","now","time","delta","setAttribute","appendChild","uTime","uUseMouse","uNoiseMultiplier","uTexture","uFlow","requestAnimationFrame","opacity","destroy","cancelAnimationFrame","isSSR","throttled","delay","fn","lastCall","args","Date","getTime","getMean","arr","curr","Tornis","lastX","lastY","lastWidth","innerWidth","lastHeight","innerHeight","lastMouseX","lastMouseY","lastWindowX","screenX","lastWindowY","screenY","lastAlpha","lastBeta","lastGamma","currAlpha","currBeta","currGamma","scrollHeight","scrollChange","sizeChange","mouseChange","positionChange","orientationChange","devicePixelRatioChange","currX","currY","currWidth","currHeight","currMouseX","currMouseY","currWindowX","currDevicePixelRatio","lastDevicePixelRatio","devicePixelRatio","mouseXVelocity","mouseYVelocity","lastMouseXVelocity","lastMouseYVelocity","windowXVelocity","windowYVelocity","lastWindowXVelocity","lastWindowYVelocity","updating","callbacks","handleResize","handleMouse","handleOrientation","recalibrateOrientation","formatData","watch","unwatch","initialAlpha","initialBeta","beta","initialGamma","gamma","calibration","current","scroll","changed","scrollXVelocity","scrollYVelocity","docY","orientation","ratio","shift","cb","callOnWatch","firstRunData","TORNIS","__TORNIS","watchViewport","unwatchViewport","getViewportState","updateViewport","classList","WaveEffect","scope","elements","querySelectorAll","apps","touchSupported","GLSLApp","documentElement","MobileApp","DesktopApp","app"],"mappings":"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","file":"wave-effect.js","sourceRoot":"../src","sourcesContent":["/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n","/*!\n * imagesLoaded v4.1.4\n * JavaScript is all like \"You images are done yet or what?\"\n * MIT License\n */\n\n( function( window, factory ) { 'use strict';\n  // universal module definition\n\n  /*global define: false, module: false, require: false */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter'\n    ], function( EvEmitter ) {\n      return factory( window, EvEmitter );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('ev-emitter')\n    );\n  } else {\n    // browser global\n    window.imagesLoaded = factory(\n      window,\n      window.EvEmitter\n    );\n  }\n\n})( typeof window !== 'undefined' ? window : this,\n\n// --------------------------  factory -------------------------- //\n\nfunction factory( window, EvEmitter ) {\n\n'use strict';\n\nvar $ = window.jQuery;\nvar console = window.console;\n\n// -------------------------- helpers -------------------------- //\n\n// extend objects\nfunction extend( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n}\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nfunction makeArray( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n}\n\n// -------------------------- imagesLoaded -------------------------- //\n\n/**\n * @param {Array, Element, NodeList, String} elem\n * @param {Object or Function} options - if function, use as callback\n * @param {Function} onAlways - callback function\n */\nfunction ImagesLoaded( elem, options, onAlways ) {\n  // coerce ImagesLoaded() without new, to be new ImagesLoaded()\n  if ( !( this instanceof ImagesLoaded ) ) {\n    return new ImagesLoaded( elem, options, onAlways );\n  }\n  // use elem as selector string\n  var queryElem = elem;\n  if ( typeof elem == 'string' ) {\n    queryElem = document.querySelectorAll( elem );\n  }\n  // bail if bad element\n  if ( !queryElem ) {\n    console.error( 'Bad element for imagesLoaded ' + ( queryElem || elem ) );\n    return;\n  }\n\n  this.elements = makeArray( queryElem );\n  this.options = extend( {}, this.options );\n  // shift arguments if no options set\n  if ( typeof options == 'function' ) {\n    onAlways = options;\n  } else {\n    extend( this.options, options );\n  }\n\n  if ( onAlways ) {\n    this.on( 'always', onAlways );\n  }\n\n  this.getImages();\n\n  if ( $ ) {\n    // add jQuery Deferred object\n    this.jqDeferred = new $.Deferred();\n  }\n\n  // HACK check async to allow time to bind listeners\n  setTimeout( this.check.bind( this ) );\n}\n\nImagesLoaded.prototype = Object.create( EvEmitter.prototype );\n\nImagesLoaded.prototype.options = {};\n\nImagesLoaded.prototype.getImages = function() {\n  this.images = [];\n\n  // filter & find items if we have an item selector\n  this.elements.forEach( this.addElementImages, this );\n};\n\n/**\n * @param {Node} element\n */\nImagesLoaded.prototype.addElementImages = function( elem ) {\n  // filter siblings\n  if ( elem.nodeName == 'IMG' ) {\n    this.addImage( elem );\n  }\n  // get background image on element\n  if ( this.options.background === true ) {\n    this.addElementBackgroundImages( elem );\n  }\n\n  // find children\n  // no non-element nodes, #143\n  var nodeType = elem.nodeType;\n  if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\n    return;\n  }\n  var childImgs = elem.querySelectorAll('img');\n  // concat childElems to filterFound array\n  for ( var i=0; i < childImgs.length; i++ ) {\n    var img = childImgs[i];\n    this.addImage( img );\n  }\n\n  // get child background images\n  if ( typeof this.options.background == 'string' ) {\n    var children = elem.querySelectorAll( this.options.background );\n    for ( i=0; i < children.length; i++ ) {\n      var child = children[i];\n      this.addElementBackgroundImages( child );\n    }\n  }\n};\n\nvar elementNodeTypes = {\n  1: true,\n  9: true,\n  11: true\n};\n\nImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    // Firefox returns null if in a hidden iframe https://bugzil.la/548397\n    return;\n  }\n  // get url inside url(\"...\")\n  var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\n  var matches = reURL.exec( style.backgroundImage );\n  while ( matches !== null ) {\n    var url = matches && matches[2];\n    if ( url ) {\n      this.addBackground( url, elem );\n    }\n    matches = reURL.exec( style.backgroundImage );\n  }\n};\n\n/**\n * @param {Image} img\n */\nImagesLoaded.prototype.addImage = function( img ) {\n  var loadingImage = new LoadingImage( img );\n  this.images.push( loadingImage );\n};\n\nImagesLoaded.prototype.addBackground = function( url, elem ) {\n  var background = new Background( url, elem );\n  this.images.push( background );\n};\n\nImagesLoaded.prototype.check = function() {\n  var _this = this;\n  this.progressedCount = 0;\n  this.hasAnyBroken = false;\n  // complete if no images\n  if ( !this.images.length ) {\n    this.complete();\n    return;\n  }\n\n  function onProgress( image, elem, message ) {\n    // HACK - Chrome triggers event before object properties have changed. #83\n    setTimeout( function() {\n      _this.progress( image, elem, message );\n    });\n  }\n\n  this.images.forEach( function( loadingImage ) {\n    loadingImage.once( 'progress', onProgress );\n    loadingImage.check();\n  });\n};\n\nImagesLoaded.prototype.progress = function( image, elem, message ) {\n  this.progressedCount++;\n  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;\n  // progress event\n  this.emitEvent( 'progress', [ this, image, elem ] );\n  if ( this.jqDeferred && this.jqDeferred.notify ) {\n    this.jqDeferred.notify( this, image );\n  }\n  // check if completed\n  if ( this.progressedCount == this.images.length ) {\n    this.complete();\n  }\n\n  if ( this.options.debug && console ) {\n    console.log( 'progress: ' + message, image, elem );\n  }\n};\n\nImagesLoaded.prototype.complete = function() {\n  var eventName = this.hasAnyBroken ? 'fail' : 'done';\n  this.isComplete = true;\n  this.emitEvent( eventName, [ this ] );\n  this.emitEvent( 'always', [ this ] );\n  if ( this.jqDeferred ) {\n    var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';\n    this.jqDeferred[ jqMethod ]( this );\n  }\n};\n\n// --------------------------  -------------------------- //\n\nfunction LoadingImage( img ) {\n  this.img = img;\n}\n\nLoadingImage.prototype = Object.create( EvEmitter.prototype );\n\nLoadingImage.prototype.check = function() {\n  // If complete is true and browser supports natural sizes,\n  // try to check for image status manually.\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    // report based on naturalWidth\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    return;\n  }\n\n  // If none of the checks above matched, simulate loading on detached element.\n  this.proxyImage = new Image();\n  this.proxyImage.addEventListener( 'load', this );\n  this.proxyImage.addEventListener( 'error', this );\n  // bind to image as well for Firefox. #191\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.proxyImage.src = this.img.src;\n};\n\nLoadingImage.prototype.getIsImageComplete = function() {\n  // check for non-zero, non-undefined naturalWidth\n  // fixes Safari+InfiniteScroll+Masonry bug infinite-scroll#671\n  return this.img.complete && this.img.naturalWidth;\n};\n\nLoadingImage.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.img, message ] );\n};\n\n// ----- events ----- //\n\n// trigger specified handler for event type\nLoadingImage.prototype.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nLoadingImage.prototype.onload = function() {\n  this.confirm( true, 'onload' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.onerror = function() {\n  this.confirm( false, 'onerror' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.unbindEvents = function() {\n  this.proxyImage.removeEventListener( 'load', this );\n  this.proxyImage.removeEventListener( 'error', this );\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\n// -------------------------- Background -------------------------- //\n\nfunction Background( url, element ) {\n  this.url = url;\n  this.element = element;\n  this.img = new Image();\n}\n\n// inherit LoadingImage prototype\nBackground.prototype = Object.create( LoadingImage.prototype );\n\nBackground.prototype.check = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.img.src = this.url;\n  // check if image is already complete\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    this.unbindEvents();\n  }\n};\n\nBackground.prototype.unbindEvents = function() {\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\nBackground.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.element, message ] );\n};\n\n// -------------------------- jQuery -------------------------- //\n\nImagesLoaded.makeJQueryPlugin = function( jQuery ) {\n  jQuery = jQuery || window.jQuery;\n  if ( !jQuery ) {\n    return;\n  }\n  // set local variable\n  $ = jQuery;\n  // $().imagesLoaded()\n  $.fn.imagesLoaded = function( options, callback ) {\n    var instance = new ImagesLoaded( this, options, callback );\n    return instance.jqDeferred.promise( $(this) );\n  };\n};\n// try making plugin\nImagesLoaded.makeJQueryPlugin();\n\n// --------------------------  -------------------------- //\n\nreturn ImagesLoaded;\n\n});\n","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.drawRange.start,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPositionArray() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr.data;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(array) {\n        if (!array) array = this.getPositionArray();\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: use offset/stride if exists\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += 3) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(array) {\n        if (!array) array = this.getPositionArray();\n        if (!this.bounds) this.computeBoundingBox(array);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += 3) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        if (this.vao) this.gl.renderer.deleteVertexArray(this.vao);\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        if (this.blendEquation.modeRGB) this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) {\n            this.gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n        }\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.gl.viewport(0, 0, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (notifyParent && this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","// TODO: multi target rendering\n// TODO: test stencil and depth\n// TODO: destroy\n// TODO: blit on resize?\nimport { Texture } from './Texture.js';\n\nexport class RenderTarget {\n    constructor(\n        gl,\n        {\n            width = gl.canvas.width,\n            height = gl.canvas.height,\n            target = gl.FRAMEBUFFER,\n            color = 1, // number of color attachments\n            depth = true,\n            stencil = false,\n            depthTexture = false, // note - stencil breaks\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = minFilter,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            unpackAlignment,\n            premultiplyAlpha,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(\n                new Texture(gl, {\n                    width,\n                    height,\n                    wrapS,\n                    wrapT,\n                    minFilter,\n                    magFilter,\n                    type,\n                    format,\n                    internalFormat,\n                    unpackAlignment,\n                    premultiplyAlpha,\n                    flipY: false,\n                    generateMipmaps: false,\n                })\n            );\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width,\n                height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n}\n","const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import * as Vec4Func from './functions/Vec4Func.js';\n\nexport class Vec4 extends Array {\n    constructor(x = 0, y = x, z = x, w = x) {\n        super(x, y, z, w);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set w(v) {\n        this[3] = v;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        Vec4Func.set(this, x, y, z, w);\n        return this;\n    }\n\n    copy(v) {\n        Vec4Func.copy(this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec4Func.normalize(this, this);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Plane } from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, { width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height, width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        Plane.buildPlane(\n            position,\n            normal,\n            uv,\n            index,\n            depth,\n            height,\n            -width,\n            dSegs,\n            hSegs,\n            2,\n            1,\n            0,\n            1,\n            -1,\n            (i += (dSegs + 1) * (hSegs + 1)),\n            (ii += dSegs * hSegs)\n        );\n\n        // top, bottom\n        Plane.buildPlane(\n            position,\n            normal,\n            uv,\n            index,\n            width,\n            depth,\n            height,\n            dSegs,\n            hSegs,\n            0,\n            2,\n            1,\n            1,\n            1,\n            (i += (dSegs + 1) * (hSegs + 1)),\n            (ii += dSegs * hSegs)\n        );\n        Plane.buildPlane(\n            position,\n            normal,\n            uv,\n            index,\n            width,\n            depth,\n            -height,\n            dSegs,\n            hSegs,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            (i += (wSegs + 1) * (dSegs + 1)),\n            (ii += wSegs * dSegs)\n        );\n\n        // front, back\n        Plane.buildPlane(\n            position,\n            normal,\n            uv,\n            index,\n            width,\n            height,\n            -depth,\n            wSegs,\n            hSegs,\n            0,\n            1,\n            2,\n            -1,\n            -1,\n            (i += (wSegs + 1) * (dSegs + 1)),\n            (ii += wSegs * dSegs)\n        );\n        Plane.buildPlane(\n            position,\n            normal,\n            uv,\n            index,\n            width,\n            height,\n            depth,\n            wSegs,\n            hSegs,\n            0,\n            1,\n            2,\n            1,\n            -1,\n            (i += (wSegs + 1) * (hSegs + 1)),\n            (ii += wSegs * hSegs)\n        );\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(\n        gl,\n        {\n            radius = 0.5,\n            widthSegments = 16,\n            heightSegments = Math.ceil(widthSegments * 0.5),\n            phiStart = 0,\n            phiLength = Math.PI * 2,\n            thetaStart = 0,\n            thetaLength = Math.PI,\n            attributes = {},\n        } = {}\n    ) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3] = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3] = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2] = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3] = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3] = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Cylinder extends Geometry {\n    constructor(\n        gl,\n        {\n            radiusTop = 0.5,\n            radiusBottom = 0.5,\n            height = 1,\n            radialSegments = 8,\n            heightSegments = 1,\n            openEnded = false,\n            thetaStart = 0,\n            thetaLength = Math.PI * 2,\n            attributes = {},\n        } = {}\n    ) {\n        const rSegs = radialSegments;\n        const hSegs = heightSegments;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const numCaps = openEnded ? 0 : radiusBottom && radiusTop ? 2 : 1;\n        const num = (rSegs + 1) * (hSegs + 1 + numCaps) + numCaps;\n        const numIndices = rSegs * hSegs * 6 + numCaps * rSegs * 3;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n        const indexArray = [];\n\n        addHeight();\n        if (!openEnded) {\n            if (radiusTop) addCap(true);\n            if (radiusBottom) addCap(false);\n        }\n\n        function addHeight() {\n            let x, y;\n            const n = new Vec3();\n            const slope = (radiusBottom - radiusTop) / height;\n\n            for (y = 0; y <= hSegs; y++) {\n                const indexRow = [];\n                const v = y / hSegs;\n\n                const r = v * (radiusBottom - radiusTop) + radiusTop;\n                for (x = 0; x <= rSegs; x++) {\n                    const u = x / rSegs;\n                    const theta = u * tLength + tStart;\n                    const sinTheta = Math.sin(theta);\n                    const cosTheta = Math.cos(theta);\n\n                    position.set([r * sinTheta, (0.5 - v) * height, r * cosTheta], i * 3);\n                    n.set(sinTheta, slope, cosTheta).normalize();\n                    normal.set([n.x, n.y, n.z], i * 3);\n                    uv.set([u, 1 - v], i * 2);\n                    indexRow.push(i++);\n                }\n                indexArray.push(indexRow);\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                for (y = 0; y < hSegs; y++) {\n                    const a = indexArray[y][x];\n                    const b = indexArray[y + 1][x];\n                    const c = indexArray[y + 1][x + 1];\n                    const d = indexArray[y][x + 1];\n\n                    index.set([a, b, d, b, c, d], ii * 3);\n                    ii += 2;\n                }\n            }\n        }\n\n        function addCap(isTop) {\n            let x;\n            const r = isTop === true ? radiusTop : radiusBottom;\n            const sign = isTop === true ? 1 : -1;\n\n            const centerIndex = i;\n            position.set([0, 0.5 * height * sign, 0], i * 3);\n            normal.set([0, sign, 0], i * 3);\n            uv.set([0.5, 0.5], i * 2);\n            i++;\n\n            for (x = 0; x <= rSegs; x++) {\n                const u = x / rSegs;\n                const theta = u * tLength + tStart;\n                const cosTheta = Math.cos(theta);\n                const sinTheta = Math.sin(theta);\n\n                position.set([r * sinTheta, 0.5 * height * sign, r * cosTheta], i * 3);\n                normal.set([0, sign, 0], i * 3);\n                uv.set([cosTheta * 0.5 + 0.5, sinTheta * 0.5 * sign + 0.5], i * 2);\n                i++;\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                const j = centerIndex + x + 1;\n                if (isTop) {\n                    index.set([j, j + 1, centerIndex], ii * 3);\n                } else {\n                    index.set([j + 1, j, centerIndex], ii * 3);\n                }\n                ii++;\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { attributes = {} } = {}) {\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusGeometry.js\n\nimport { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Torus extends Geometry {\n    constructor(gl, { radius = 0.5, tube = 0.2, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2, attributes = {} } = {}) {\n        const num = (radialSegments + 1) * (tubularSegments + 1);\n        const numIndices = radialSegments * tubularSegments * 6;\n\n        const vertices = new Float32Array(num * 3);\n        const normals = new Float32Array(num * 3);\n        const uvs = new Float32Array(num * 2);\n        const indices = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        const center = new Vec3();\n        const vertex = new Vec3();\n        const normal = new Vec3();\n\n        // generate vertices, normals and uvs\n        let idx = 0;\n        for (let j = 0; j <= radialSegments; j++) {\n            for (let i = 0; i <= tubularSegments; i++, idx++) {\n                const u = (i / tubularSegments) * arc;\n                const v = (j / radialSegments) * Math.PI * 2;\n\n                // vertex\n                vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n                vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n                vertex.z = tube * Math.sin(v);\n\n                vertices.set([vertex.x, vertex.y, vertex.z], idx * 3);\n\n                // normal\n                center.x = radius * Math.cos(u);\n                center.y = radius * Math.sin(u);\n                normal.sub(vertex, center).normalize();\n\n                normals.set([normal.x, normal.y, normal.z], idx * 3);\n\n                // uv\n                uvs.set([i / tubularSegments, j / radialSegments], idx * 2);\n            }\n        }\n\n        // generate indices\n        idx = 0;\n        for (let j = 1; j <= radialSegments; j++) {\n            for (let i = 1; i <= tubularSegments; i++, idx++) {\n                // indices\n                const a = (tubularSegments + 1) * j + i - 1;\n                const b = (tubularSegments + 1) * (j - 1) + i - 1;\n                const c = (tubularSegments + 1) * (j - 1) + i;\n                const d = (tubularSegments + 1) * j + i;\n\n                // faces\n                indices.set([a, b, d, b, c, d], idx * 6);\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: vertices },\n            normal: { size: 3, data: normals },\n            uv: { size: 2, data: uvs },\n            index: { data: indices },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    function dolly(dollyScale) {\n        sphericalDelta.radius /= dollyScale;\n    }\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","// TODO: barycentric code shouldn't be here, but where?\n// TODO: SphereCast?\n\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\nconst tempVec2c = new Vec2();\n\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\nconst tempVec3c = new Vec3();\nconst tempVec3d = new Vec3();\nconst tempVec3e = new Vec3();\nconst tempVec3f = new Vec3();\nconst tempVec3g = new Vec3();\nconst tempVec3h = new Vec3();\nconst tempVec3i = new Vec3();\nconst tempVec3j = new Vec3();\nconst tempVec3k = new Vec3();\n\nconst tempMat4 = new Mat4();\n\nexport class Raycast {\n    constructor() {\n        this.origin = new Vec3();\n        this.direction = new Vec3();\n    }\n\n    // Set ray from mouse unprojection\n    castMouse(camera, mouse = [0, 0]) {\n        if (camera.type === 'orthographic') {\n            // Set origin\n            // Since camera is orthographic, origin is not the camera position\n            const { left, right, bottom, top, zoom } = camera;\n            const x = left / zoom + ((right - left) / zoom) * (mouse[0] * 0.5 + 0.5);\n            const y = bottom / zoom + ((top - bottom) / zoom) * (mouse[1] * 0.5 + 0.5);\n            this.origin.set(x, y, 0);\n            this.origin.applyMatrix4(camera.worldMatrix);\n\n            // Set direction\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\n            this.direction.x = -camera.worldMatrix[8];\n            this.direction.y = -camera.worldMatrix[9];\n            this.direction.z = -camera.worldMatrix[10];\n        } else {\n            // Set origin\n            camera.worldMatrix.getTranslation(this.origin);\n\n            // Set direction\n            this.direction.set(mouse[0], mouse[1], 0.5);\n            camera.unproject(this.direction);\n            this.direction.sub(this.origin).normalize();\n        }\n    }\n\n    intersectBounds(meshes, { maxDistance, output = [] } = {}) {\n        if (!Array.isArray(meshes)) meshes = [meshes];\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n\n        const hits = output;\n        hits.length = 0;\n\n        meshes.forEach((mesh) => {\n            // Create bounds\n            if (!mesh.geometry.bounds || mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\n            const bounds = mesh.geometry.bounds;\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            // Break out early if bounds too far away from origin\n            if (maxDistance) {\n                if (origin.distance(bounds.center) - bounds.radius > localMaxDistance) return;\n            }\n\n            let localDistance = 0;\n\n            // Check origin isn't inside bounds before testing intersection\n            if (mesh.geometry.raycast === 'sphere') {\n                if (origin.distance(bounds.center) > bounds.radius) {\n                    localDistance = this.intersectSphere(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            } else {\n                if (\n                    origin.x < bounds.min.x ||\n                    origin.x > bounds.max.x ||\n                    origin.y < bounds.min.y ||\n                    origin.y > bounds.max.y ||\n                    origin.z < bounds.min.z ||\n                    origin.z > bounds.max.z\n                ) {\n                    localDistance = this.intersectBox(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            }\n\n            if (maxDistance && localDistance > localMaxDistance) return;\n\n            // Create object on mesh to avoid generating lots of objects\n            if (!mesh.hit) mesh.hit = { localPoint: new Vec3(), point: new Vec3() };\n\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            hits.push(mesh);\n        });\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectMeshes(meshes, { cullFace = true, maxDistance, includeUV = true, includeNormal = true, output = [] } = {}) {\n        // Test bounds first before testing geometry\n        const hits = this.intersectBounds(meshes, { maxDistance, output });\n        if (!hits.length) return hits;\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n        const a = tempVec3c;\n        const b = tempVec3d;\n        const c = tempVec3e;\n        const closestFaceNormal = tempVec3f;\n        const faceNormal = tempVec3g;\n        const barycoord = tempVec3h;\n        const uvA = tempVec2a;\n        const uvB = tempVec2b;\n        const uvC = tempVec2c;\n\n        for (let i = hits.length - 1; i >= 0; i--) {\n            const mesh = hits[i];\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            let localDistance = 0;\n            let closestA, closestB, closestC;\n\n            const geometry = mesh.geometry;\n            const attributes = geometry.attributes;\n            const index = attributes.index;\n\n            const start = Math.max(0, geometry.drawRange.start);\n            const end = Math.min(index ? index.count : attributes.position.count, geometry.drawRange.start + geometry.drawRange.count);\n\n            for (let j = start; j < end; j += 3) {\n                // Position attribute indices for each triangle\n                const ai = index ? index.data[j] : j;\n                const bi = index ? index.data[j + 1] : j + 1;\n                const ci = index ? index.data[j + 2] : j + 2;\n\n                a.fromArray(attributes.position.data, ai * 3);\n                b.fromArray(attributes.position.data, bi * 3);\n                c.fromArray(attributes.position.data, ci * 3);\n\n                const distance = this.intersectTriangle(a, b, c, cullFace, origin, direction, faceNormal);\n                if (!distance) continue;\n\n                // Too far away\n                if (maxDistance && distance > localMaxDistance) continue;\n\n                if (!localDistance || distance < localDistance) {\n                    localDistance = distance;\n                    closestA = ai;\n                    closestB = bi;\n                    closestC = ci;\n                    closestFaceNormal.copy(faceNormal);\n                }\n            }\n\n            if (!localDistance) hits.splice(i, 1);\n\n            // Update hit values from bounds-test\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            // Add unique hit objects on mesh to avoid generating lots of objects\n            if (!mesh.hit.faceNormal) {\n                mesh.hit.localFaceNormal = new Vec3();\n                mesh.hit.faceNormal = new Vec3();\n                mesh.hit.uv = new Vec2();\n                mesh.hit.localNormal = new Vec3();\n                mesh.hit.normal = new Vec3();\n            }\n\n            // Add face normal data which is already computed\n            mesh.hit.localFaceNormal.copy(closestFaceNormal);\n            mesh.hit.faceNormal.copy(mesh.hit.localFaceNormal).transformDirection(mesh.worldMatrix);\n\n            // Optional data, opt out to optimise a bit if necessary\n            if (includeUV || includeNormal) {\n                // Calculate barycoords to find uv values at hit point\n                a.fromArray(attributes.position.data, closestA * 3);\n                b.fromArray(attributes.position.data, closestB * 3);\n                c.fromArray(attributes.position.data, closestC * 3);\n                this.getBarycoord(mesh.hit.localPoint, a, b, c, barycoord);\n            }\n\n            if (includeUV && attributes.uv) {\n                uvA.fromArray(attributes.uv.data, closestA * 2);\n                uvB.fromArray(attributes.uv.data, closestB * 2);\n                uvC.fromArray(attributes.uv.data, closestC * 2);\n                mesh.hit.uv.set(\n                    uvA.x * barycoord.x + uvB.x * barycoord.y + uvC.x * barycoord.z,\n                    uvA.y * barycoord.x + uvB.y * barycoord.y + uvC.y * barycoord.z\n                );\n            }\n\n            if (includeNormal && attributes.normal) {\n                a.fromArray(attributes.normal.data, closestA * 3);\n                b.fromArray(attributes.normal.data, closestB * 3);\n                c.fromArray(attributes.normal.data, closestC * 3);\n                mesh.hit.localNormal.set(\n                    a.x * barycoord.x + b.x * barycoord.y + c.x * barycoord.z,\n                    a.y * barycoord.x + b.y * barycoord.y + c.y * barycoord.z,\n                    a.z * barycoord.x + b.z * barycoord.y + c.z * barycoord.z\n                );\n\n                mesh.hit.normal.copy(mesh.hit.localNormal).transformDirection(mesh.worldMatrix);\n            }\n        }\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\n        const ray = tempVec3c;\n        ray.sub(sphere.center, origin);\n        const tca = ray.dot(direction);\n        const d2 = ray.dot(ray) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return 0;\n        const thc = Math.sqrt(radius2 - d2);\n        const t0 = tca - thc;\n        const t1 = tca + thc;\n        if (t0 < 0 && t1 < 0) return 0;\n        if (t0 < 0) return t1;\n        return t0;\n    }\n\n    // Ray AABB - Ray Axis aligned bounding box testing\n    intersectBox(box, origin = this.origin, direction = this.direction) {\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\n        const invdirx = 1 / direction.x;\n        const invdiry = 1 / direction.y;\n        const invdirz = 1 / direction.z;\n        const min = box.min;\n        const max = box.max;\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\n        if (tmin > tYmax || tYmin > tmax) return 0;\n        if (tYmin > tmin) tmin = tYmin;\n        if (tYmax < tmax) tmax = tYmax;\n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\n        if (tmin > tZmax || tZmin > tmax) return 0;\n        if (tZmin > tmin) tmin = tZmin;\n        if (tZmax < tmax) tmax = tZmax;\n        if (tmax < 0) return 0;\n        return tmin >= 0 ? tmin : tmax;\n    }\n\n    intersectTriangle(a, b, c, backfaceCulling = true, origin = this.origin, direction = this.direction, normal = tempVec3g) {\n        // from https://github.com/mrdoob/three.js/blob/master/src/math/Ray.js\n        // which is from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        const edge1 = tempVec3h;\n        const edge2 = tempVec3i;\n        const diff = tempVec3j;\n        edge1.sub(b, a);\n        edge2.sub(c, a);\n        normal.cross(edge1, edge2);\n        let DdN = direction.dot(normal);\n        if (!DdN) return 0;\n        let sign;\n        if (DdN > 0) {\n            if (backfaceCulling) return 0;\n            sign = 1;\n        } else {\n            sign = -1;\n            DdN = -DdN;\n        }\n        diff.sub(origin, a);\n        let DdQxE2 = sign * direction.dot(edge2.cross(diff, edge2));\n        if (DdQxE2 < 0) return 0;\n        let DdE1xQ = sign * direction.dot(edge1.cross(diff));\n        if (DdE1xQ < 0) return 0;\n        if (DdQxE2 + DdE1xQ > DdN) return 0;\n        let QdN = -sign * diff.dot(normal);\n        if (QdN < 0) return 0;\n        return QdN / DdN;\n    }\n\n    getBarycoord(point, a, b, c, target = tempVec3h) {\n        // From https://github.com/mrdoob/three.js/blob/master/src/math/Triangle.js\n        // static/instance method to calculate barycentric coordinates\n        // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n        const v0 = tempVec3i;\n        const v1 = tempVec3j;\n        const v2 = tempVec3k;\n        v0.sub(c, a);\n        v1.sub(b, a);\n        v2.sub(point, a);\n        const dot00 = v0.dot(v0);\n        const dot01 = v0.dot(v1);\n        const dot02 = v0.dot(v2);\n        const dot11 = v1.dot(v1);\n        const dot12 = v1.dot(v2);\n        const denom = dot00 * dot11 - dot01 * dot01;\n        if (denom === 0) return target.set(-2, -1, -1);\n        const invDenom = 1 / denom;\n        const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n        return target.set(1 - u - v, v, u);\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\nconst CATMULLROM = 'catmullrom';\nconst CUBICBEZIER = 'cubicbezier';\nconst QUADRATICBEZIER = 'quadraticbezier';\n\n// temp\nconst _a0 = new Vec3(),\n    _a1 = new Vec3(),\n    _a2 = new Vec3(),\n    _a3 = new Vec3();\n\n/**\n * Get the control points of cubic bezier curve.\n * @param {*} i\n * @param {*} a\n * @param {*} b\n */\nfunction getCtrlPoint(points, i, a = 0.168, b = 0.168) {\n    if (i < 1) {\n        _a0.sub(points[1], points[0]).scale(a).add(points[0]);\n    } else {\n        _a0.sub(points[i + 1], points[i - 1])\n            .scale(a)\n            .add(points[i]);\n    }\n    if (i > points.length - 3) {\n        const last = points.length - 1;\n        _a1.sub(points[last - 1], points[last])\n            .scale(b)\n            .add(points[last]);\n    } else {\n        _a1.sub(points[i], points[i + 2])\n            .scale(b)\n            .add(points[i + 1]);\n    }\n    return [_a0.clone(), _a1.clone()];\n}\n\nfunction getQuadraticBezierPoint(t, p0, c0, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 2);\n    _a1.copy(c0).scale(2 * k * t);\n    _a2.copy(p1).scale(t ** 2);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2);\n    return ret;\n}\n\nfunction getCubicBezierPoint(t, p0, c0, c1, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 3);\n    _a1.copy(c0).scale(3 * k ** 2 * t);\n    _a2.copy(c1).scale(3 * k * t ** 2);\n    _a3.copy(p1).scale(t ** 3);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2).add(_a3);\n    return ret;\n}\n\nexport class Curve {\n    constructor({ points = [new Vec3(0, 0, 0), new Vec3(0, 1, 0), new Vec3(1, 1, 0), new Vec3(1, 0, 0)], divisions = 12, type = CATMULLROM } = {}) {\n        this.points = points;\n        this.divisions = divisions;\n        this.type = type;\n    }\n\n    _getQuadraticBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 3) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        const p0 = this.points[0];\n        let c0 = this.points[1],\n            p1 = this.points[2];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n            points.push(p);\n        }\n\n        let offset = 3;\n        while (count - offset > 0) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c0);\n            p1 = this.points[offset];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n                points.push(p);\n            }\n            offset++;\n        }\n\n        return points;\n    }\n\n    _getCubicBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 4) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        let p0 = this.points[0],\n            c0 = this.points[1],\n            c1 = this.points[2],\n            p1 = this.points[3];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n            points.push(p);\n        }\n\n        let offset = 4;\n        while (count - offset > 1) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c1);\n            c1 = this.points[offset];\n            p1 = this.points[offset + 1];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n                points.push(p);\n            }\n            offset += 2;\n        }\n\n        return points;\n    }\n\n    _getCatmullRomPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count <= 2) {\n            return this.points;\n        }\n\n        let p0;\n        this.points.forEach((p, i) => {\n            if (i === 0) {\n                p0 = p;\n            } else {\n                const [c0, c1] = getCtrlPoint(this.points, i - 1, a, b);\n                const c = new Curve({\n                    points: [p0, c0, c1, p],\n                    type: CUBICBEZIER,\n                });\n                points.pop();\n                points.push(...c.getPoints(divisions));\n                p0 = p;\n            }\n        });\n\n        return points;\n    }\n\n    getPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const type = this.type;\n\n        if (type === QUADRATICBEZIER) {\n            return this._getQuadraticBezierPoints(divisions);\n        }\n\n        if (type === CUBICBEZIER) {\n            return this._getCubicBezierPoints(divisions);\n        }\n\n        if (type === CATMULLROM) {\n            return this._getCatmullRomPoints(divisions, a, b);\n        }\n\n        return this.points;\n    }\n}\n\nCurve.CATMULLROM = CATMULLROM;\nCurve.CUBICBEZIER = CUBICBEZIER;\nCurve.QUADRATICBEZIER = QUADRATICBEZIER;\n","// TODO: Destroy render targets if size changed and exists\n\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Post {\n    constructor(\n        gl,\n        {\n            width,\n            height,\n            dpr,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = gl.LINEAR,\n            geometry = new Triangle(gl),\n            targetOnly = null,\n        } = {}\n    ) {\n        this.gl = gl;\n\n        this.options = { wrapS, wrapT, minFilter, magFilter };\n\n        this.passes = [];\n\n        this.geometry = geometry;\n\n        this.uniform = { value: null };\n        this.targetOnly = targetOnly;\n\n        const fbo = (this.fbo = {\n            read: null,\n            write: null,\n            swap: () => {\n                let temp = fbo.read;\n                fbo.read = fbo.write;\n                fbo.write = temp;\n            },\n        });\n\n        this.resize({ width, height, dpr });\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = { value: this.fbo.read.texture };\n\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    resize({ width, height, dpr } = {}) {\n        if (dpr) this.dpr = dpr;\n        if (width) {\n            this.width = width;\n            this.height = height || width;\n        }\n\n        dpr = this.dpr || this.gl.renderer.dpr;\n        width = (this.width || this.gl.renderer.width) * dpr;\n        height = (this.height || this.gl.renderer.height) * dpr;\n\n        this.options.width = width;\n        this.options.height = height;\n\n        this.fbo.read = new RenderTarget(this.gl, this.options);\n        this.fbo.write = new RenderTarget(this.gl, this.options);\n    }\n\n    // Uses same arguments as renderer.render\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true }) {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        this.gl.renderer.render({\n            scene,\n            camera,\n            target: enabledPasses.length || (!target && this.targetOnly) ? this.fbo.write : target,\n            update,\n            sort,\n            frustumCull,\n        });\n        this.fbo.swap();\n\n        enabledPasses.forEach((pass, i) => {\n            pass.mesh.program.uniforms[pass.textureUniform].value = this.fbo.read.texture;\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: i === enabledPasses.length - 1 && (target || !this.targetOnly) ? target : this.fbo.write,\n                clear: true,\n            });\n            this.fbo.swap();\n        });\n\n        this.uniform.value = this.fbo.read.texture;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst prevPos = new Vec3();\nconst prevRot = new Quat();\nconst prevScl = new Vec3();\n\nconst nextPos = new Vec3();\nconst nextRot = new Quat();\nconst nextScl = new Vec3();\n\nexport class Animation {\n    constructor({ objects, data }) {\n        this.objects = objects;\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = 1;\n        this.duration = data.frames.length - 1;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.elapsed % this.duration;\n\n        const floorFrame = Math.floor(elapsed);\n        const blend = elapsed - floorFrame;\n        const prevKey = this.data.frames[floorFrame];\n        const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n\n        this.objects.forEach((object, i) => {\n            prevPos.fromArray(prevKey.position, i * 3);\n            prevRot.fromArray(prevKey.quaternion, i * 4);\n            prevScl.fromArray(prevKey.scale, i * 3);\n\n            nextPos.fromArray(nextKey.position, i * 3);\n            nextRot.fromArray(nextKey.quaternion, i * 4);\n            nextScl.fromArray(nextKey.scale, i * 3);\n\n            prevPos.lerp(nextPos, blend);\n            prevRot.slerp(nextRot, blend);\n            prevScl.lerp(nextScl, blend);\n\n            object.position.lerp(prevPos, weight);\n            object.quaternion.slerp(prevRot, weight);\n            object.scale.lerp(prevScl, weight);\n        });\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Transform } from '../core/Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\nimport { Animation } from './Animation.js';\n\nconst tempMat4 = new Mat4();\n\nexport class Skin extends Mesh {\n    constructor(gl, { rig, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n\n        this.createBones(rig);\n        this.createBoneTexture();\n        this.animations = [];\n\n        Object.assign(this.program.uniforms, {\n            boneTexture: { value: this.boneTexture },\n            boneTextureSize: { value: this.boneTextureSize },\n        });\n    }\n\n    createBones(rig) {\n        // Create root so that can simply update world matrix of whole skeleton\n        this.root = new Transform();\n\n        // Create bones\n        this.bones = [];\n        if (!rig.bones || !rig.bones.length) return;\n        for (let i = 0; i < rig.bones.length; i++) {\n            const bone = new Transform();\n\n            // Set initial values (bind pose)\n            bone.position.fromArray(rig.bindPose.position, i * 3);\n            bone.quaternion.fromArray(rig.bindPose.quaternion, i * 4);\n            bone.scale.fromArray(rig.bindPose.scale, i * 3);\n\n            this.bones.push(bone);\n        }\n\n        // Once created, set the hierarchy\n        rig.bones.forEach((data, i) => {\n            this.bones[i].name = data.name;\n            if (data.parent === -1) return this.bones[i].setParent(this.root);\n            this.bones[i].setParent(this.bones[data.parent]);\n        });\n\n        // Then update to calculate world matrices\n        this.root.updateMatrixWorld(true);\n\n        // Store inverse of bind pose to calculate differences\n        this.bones.forEach((bone) => {\n            bone.bindInverse = new Mat4(...bone.worldMatrix).inverse();\n        });\n    }\n\n    createBoneTexture() {\n        if (!this.bones.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.bones.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    addAnimation(data) {\n        const animation = new Animation({ objects: this.bones, data });\n        this.animations.push(animation);\n        return animation;\n    }\n\n    update() {\n        // Calculate combined animation weight\n        let total = 0;\n        this.animations.forEach((animation) => (total += animation.weight));\n\n        this.animations.forEach((animation, i) => {\n            // force first animation to set in order to reset frame\n            animation.update(total, i === 0);\n        });\n    }\n\n    draw({ camera } = {}) {\n        // Update world matrices manually, as not part of scene graph\n        this.root.updateMatrixWorld(true);\n\n        // Update bone texture\n        this.bones.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n\n        super.draw({ camera });\n    }\n}\n","export function Text({\n    font,\n    text,\n    width = Infinity,\n    align = 'left',\n    size = 1,\n    letterSpacing = 0,\n    lineHeight = 1.4,\n    wordSpacing = 0,\n    wordBreak = false,\n}) {\n    const _this = this;\n    let glyphs, buffers;\n    let fontHeight, baseline, scale;\n\n    const newline = /\\n/;\n    const whitespace = /\\s/;\n\n    {\n        parseFont();\n        createGeometry();\n    }\n\n    function parseFont() {\n        glyphs = {};\n        font.chars.forEach((d) => (glyphs[d.char] = d));\n    }\n\n    function createGeometry() {\n        fontHeight = font.common.lineHeight;\n        baseline = font.common.base;\n\n        // Use baseline so that actual text height is as close to 'size' value as possible\n        scale = size / baseline;\n\n        // Strip spaces and newlines to get actual character length for buffers\n        let chars = text.replace(/[ \\n]/g, '');\n        let numChars = chars.length;\n\n        // Create output buffers\n        buffers = {\n            position: new Float32Array(numChars * 4 * 3),\n            uv: new Float32Array(numChars * 4 * 2),\n            id: new Float32Array(numChars * 4),\n            index: new Uint16Array(numChars * 6),\n        };\n\n        // Set values for buffers that don't require calculation\n        for (let i = 0; i < numChars; i++) {\n            buffers.id[i] = i;\n            buffers.index.set([i * 4, i * 4 + 2, i * 4 + 1, i * 4 + 1, i * 4 + 2, i * 4 + 3], i * 6);\n        }\n\n        layout();\n    }\n\n    function layout() {\n        const lines = [];\n\n        let cursor = 0;\n\n        let wordCursor = 0;\n        let wordWidth = 0;\n        let line = newLine();\n\n        function newLine() {\n            const line = {\n                width: 0,\n                glyphs: [],\n            };\n            lines.push(line);\n            wordCursor = cursor;\n            wordWidth = 0;\n            return line;\n        }\n\n        let maxTimes = 100;\n        let count = 0;\n        while (cursor < text.length && count < maxTimes) {\n            count++;\n\n            const char = text[cursor];\n\n            // Skip whitespace at start of line\n            if (!line.width && whitespace.test(char)) {\n                cursor++;\n                wordCursor = cursor;\n                wordWidth = 0;\n                continue;\n            }\n\n            // If newline char, skip to next line\n            if (newline.test(char)) {\n                cursor++;\n                line = newLine();\n                continue;\n            }\n\n            const glyph = glyphs[char];\n\n            // Find any applicable kern pairs\n            if (line.glyphs.length) {\n                const prevGlyph = line.glyphs[line.glyphs.length - 1][0];\n                let kern = getKernPairOffset(glyph.id, prevGlyph.id) * scale;\n                line.width += kern;\n                wordWidth += kern;\n            }\n\n            // add char to line\n            line.glyphs.push([glyph, line.width]);\n\n            // calculate advance for next glyph\n            let advance = 0;\n\n            // If whitespace, update location of current word for line breaks\n            if (whitespace.test(char)) {\n                wordCursor = cursor;\n                wordWidth = 0;\n\n                // Add wordspacing\n                advance += wordSpacing * size;\n            } else {\n                // Add letterspacing\n                advance += letterSpacing * size;\n            }\n\n            advance += glyph.xadvance * scale;\n\n            line.width += advance;\n            wordWidth += advance;\n\n            // If width defined\n            if (line.width > width) {\n                // If can break words, undo latest glyph if line not empty and create new line\n                if (wordBreak && line.glyphs.length > 1) {\n                    line.width -= advance;\n                    line.glyphs.pop();\n                    line = newLine();\n                    continue;\n\n                    // If not first word, undo current word and cursor and create new line\n                } else if (!wordBreak && wordWidth !== line.width) {\n                    let numGlyphs = cursor - wordCursor + 1;\n                    line.glyphs.splice(-numGlyphs, numGlyphs);\n                    cursor = wordCursor;\n                    line.width -= wordWidth;\n                    line = newLine();\n                    continue;\n                }\n            }\n\n            cursor++;\n        }\n\n        // Remove last line if empty\n        if (!line.width) lines.pop();\n\n        populateBuffers(lines);\n    }\n\n    function populateBuffers(lines) {\n        const texW = font.common.scaleW;\n        const texH = font.common.scaleH;\n\n        // For all fonts tested, a little offset was needed to be right on the baseline, hence 0.07.\n        let y = 0.07 * size;\n        let j = 0;\n\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            let line = lines[lineIndex];\n\n            for (let i = 0; i < line.glyphs.length; i++) {\n                const glyph = line.glyphs[i][0];\n                let x = line.glyphs[i][1];\n\n                if (align === 'center') {\n                    x -= line.width * 0.5;\n                } else if (align === 'right') {\n                    x -= line.width;\n                }\n\n                // If space, don't add to geometry\n                if (whitespace.test(glyph.char)) continue;\n\n                // Apply char sprite offsets\n                x += glyph.xoffset * scale;\n                y -= glyph.yoffset * scale;\n\n                // each letter is a quad. axis bottom left\n                let w = glyph.width * scale;\n                let h = glyph.height * scale;\n                buffers.position.set([x, y - h, 0, x, y, 0, x + w, y - h, 0, x + w, y, 0], j * 4 * 3);\n\n                let u = glyph.x / texW;\n                let uw = glyph.width / texW;\n                let v = 1.0 - glyph.y / texH;\n                let vh = glyph.height / texH;\n                buffers.uv.set([u, v - vh, u, v, u + uw, v - vh, u + uw, v], j * 4 * 2);\n\n                // Reset cursor to baseline\n                y += glyph.yoffset * scale;\n\n                j++;\n            }\n\n            y -= size * lineHeight;\n        }\n\n        _this.buffers = buffers;\n        _this.numLines = lines.length;\n        _this.height = _this.numLines * size * lineHeight;\n    }\n\n    function getKernPairOffset(id1, id2) {\n        for (let i = 0; i < font.kernings.length; i++) {\n            let k = font.kernings[i];\n            if (k.first < id1) continue;\n            if (k.second < id2) continue;\n            if (k.first > id1) return 0;\n            if (k.first === id1 && k.second > id2) return 0;\n            return k.amount;\n        }\n        return 0;\n    }\n\n    // Update buffers to layout with new layout\n    this.resize = function (options) {\n        ({ width } = options);\n        layout();\n    };\n\n    // Completely change text (like creating new Text)\n    this.update = function (options) {\n        ({ text } = options);\n        createGeometry();\n    };\n}\n","import { Program } from '../core/Program.js';\n\nconst vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat3 normalMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        gl_FragColor.rgb = normalize(vNormal);\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nexport function NormalProgram(gl) {\n    return new Program(gl, {\n        vertex: vertex,\n        fragment: fragment,\n        cullFace: null,\n    });\n}\n","import { RenderTarget } from '../core/RenderTarget.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Flowmap {\n    constructor(\n        gl,\n        {\n            size = 128, // default size of the render targets\n            falloff = 0.3, // size of the stamp, percentage of the size\n            alpha = 1, // opacity of the stamp\n            dissipation = 0.98, // affects the speed that the stamp fades. Closer to 1 is slower\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        } = {}\n    ) {\n        const _this = this;\n        this.gl = gl;\n\n        // output uniform containing render target textures\n        this.uniform = { value: null };\n\n        this.mask = {\n            read: null,\n            write: null,\n\n            // Helper function to ping pong the render targets and update the uniform\n            swap: () => {\n                let temp = _this.mask.read;\n                _this.mask.read = _this.mask.write;\n                _this.mask.write = temp;\n                _this.uniform.value = _this.mask.read.texture;\n            },\n        };\n\n        {\n            createFBOs();\n\n            this.aspect = 1;\n            this.mouse = new Vec2();\n            this.velocity = new Vec2();\n\n            this.mesh = initProgram();\n        }\n\n        function createFBOs() {\n            // Requested type not supported, fall back to half float\n            if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n\n            let minFilter = (() => {\n                if (gl.renderer.isWebgl2) return gl.LINEAR;\n                if (gl.renderer.extensions[`OES_texture_${type === gl.FLOAT ? '' : 'half_'}float_linear`]) return gl.LINEAR;\n                return gl.NEAREST;\n            })();\n\n            const options = {\n                width: size,\n                height: size,\n                type,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n                minFilter,\n                depth: false,\n            };\n\n            _this.mask.read = new RenderTarget(gl, options);\n            _this.mask.write = new RenderTarget(gl, options);\n            _this.mask.swap();\n        }\n\n        function initProgram() {\n            return new Mesh(gl, {\n                // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n                geometry: new Triangle(gl),\n\n                program: new Program(gl, {\n                    vertex,\n                    fragment,\n                    uniforms: {\n                        tMap: _this.uniform,\n\n                        uFalloff: { value: falloff * 0.5 },\n                        uAlpha: { value: alpha },\n                        uDissipation: { value: dissipation },\n\n                        // User needs to update these\n                        uAspect: { value: 1 },\n                        uMouse: { value: _this.mouse },\n                        uVelocity: { value: _this.velocity },\n                    },\n                    depthTest: false,\n                }),\n            });\n        }\n    }\n\n    update() {\n        this.mesh.program.uniforms.uAspect.value = this.aspect;\n\n        this.gl.renderer.render({\n            scene: this.mesh,\n            target: this.mask.write,\n            clear: false,\n        });\n        this.mask.swap();\n    }\n}\n\nconst vertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    uniform float uFalloff;\n    uniform float uAlpha;\n    uniform float uDissipation;\n    \n    uniform float uAspect;\n    uniform vec2 uMouse;\n    uniform vec2 uVelocity;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n        vec2 cursor = vUv - uMouse;\n        cursor.x *= uAspect;\n\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n        gl_FragColor = color;\n    }\n`;\n","import { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Texture } from '../core/Texture.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class GPGPU {\n    constructor(\n        gl,\n        {\n            // Always pass in array of vec4s (RGBA values within texture)\n            data = new Float32Array(16),\n            geometry = new Triangle(gl),\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        }\n    ) {\n        this.gl = gl;\n        const initialData = data;\n        this.passes = [];\n        this.geometry = geometry;\n        this.dataLength = initialData.length / 4;\n\n        // Windows and iOS only like power of 2 textures\n        // Find smallest PO2 that fits data\n        this.size = Math.pow(2, Math.ceil(Math.log(Math.ceil(Math.sqrt(this.dataLength))) / Math.LN2));\n\n        // Create coords for output texture\n        this.coords = new Float32Array(this.dataLength * 2);\n        for (let i = 0; i < this.dataLength; i++) {\n            const x = (i % this.size) / this.size; // to add 0.5 to be center pixel ?\n            const y = Math.floor(i / this.size) / this.size;\n            this.coords.set([x, y], i * 2);\n        }\n\n        // Use original data if already correct length of PO2 texture, else copy to new array of correct length\n        const floatArray = (() => {\n            if (initialData.length === this.size * this.size * 4) {\n                return initialData;\n            } else {\n                const a = new Float32Array(this.size * this.size * 4);\n                a.set(initialData);\n                return a;\n            }\n        })();\n\n        // Create output texture uniform using input float texture with initial data\n        this.uniform = {\n            value: new Texture(gl, {\n                image: floatArray,\n                target: gl.TEXTURE_2D,\n                type: gl.FLOAT,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? gl.RGBA32F : gl.RGBA,\n                wrapS: gl.CLAMP_TO_EDGE,\n                wrapT: gl.CLAMP_TO_EDGE,\n                generateMipmaps: false,\n                minFilter: gl.NEAREST,\n                magFilter: gl.NEAREST,\n                width: this.size,\n                flipY: false,\n            }),\n        };\n\n        // Create FBOs\n        const options = {\n            width: this.size,\n            height: this.size,\n            type: type || gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n            minFilter: gl.NEAREST,\n            depth: false,\n            unpackAlignment: 1,\n        };\n\n        this.fbo = {\n            read: new RenderTarget(gl, options),\n            write: new RenderTarget(gl, options),\n            swap: () => {\n                let temp = this.fbo.read;\n                this.fbo.read = this.fbo.write;\n                this.fbo.write = temp;\n                this.uniform.value = this.fbo.read.texture;\n            },\n        };\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = this.uniform;\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    render() {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        enabledPasses.forEach((pass, i) => {\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: this.fbo.write,\n                clear: false,\n            });\n            this.fbo.swap();\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Geometry } from '../core/Geometry.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Color } from '../math/Color.js';\n\nconst tmp = new Vec3();\n\nexport class Polyline {\n    constructor(\n        gl,\n        {\n            points, // Array of Vec3s\n            vertex = defaultVertex,\n            fragment = defaultFragment,\n            uniforms = {},\n            attributes = {}, // For passing in custom attribs\n        }\n    ) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = (this.geometry = new Geometry(\n            gl,\n            Object.assign(attributes, {\n                position: { size: 3, data: this.position },\n                prev: { size: 3, data: this.prev },\n                next: { size: 3, data: this.next },\n                side: { size: 1, data: side },\n                uv: { size: 2, data: uv },\n                index: { size: 1, data: index },\n            })\n        ));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = { value: new Vec2() };\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = { value: 1 };\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = { value: 1 };\n        if (!uniforms.uColor) this.color = uniforms.uColor = { value: new Color('#000') };\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = { value: 1 };\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = (this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        }));\n\n        this.mesh = new Mesh(gl, { geometry, program });\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p)\n                    .sub(this.points[i + 1])\n                    .add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p)\n                    .sub(this.points[i - 1])\n                    .add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n","import { Camera } from '../core/Camera.js';\nimport { Program } from '../core/Program.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\n\nexport class Shadow {\n    constructor(gl, { light = new Camera(gl), width = 1024, height = width }) {\n        this.gl = gl;\n\n        this.light = light;\n\n        this.target = new RenderTarget(gl, { width, height });\n\n        this.depthProgram = new Program(gl, {\n            vertex: defaultVertex,\n            fragment: defaultFragment,\n            cullFace: null,\n        });\n\n        this.castMeshes = [];\n    }\n\n    add({\n        mesh,\n        receive = true,\n        cast = true,\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniformProjection = 'shadowProjectionMatrix',\n        uniformView = 'shadowViewMatrix',\n        uniformTexture = 'tShadow',\n    }) {\n        // Add uniforms to existing program\n        if (receive && !mesh.program.uniforms[uniformProjection]) {\n            mesh.program.uniforms[uniformProjection] = { value: this.light.projectionMatrix };\n            mesh.program.uniforms[uniformView] = { value: this.light.viewMatrix };\n            mesh.program.uniforms[uniformTexture] = { value: this.target.texture };\n        }\n\n        if (!cast) return;\n        this.castMeshes.push(mesh);\n\n        // Store program for when switching between depth override\n        mesh.colorProgram = mesh.program;\n\n        // Check if depth program already attached\n        if (mesh.depthProgram) return;\n\n        // Use global depth override if nothing custom passed in\n        if (vertex === defaultVertex && fragment === defaultFragment) {\n            mesh.depthProgram = this.depthProgram;\n            return;\n        }\n\n        // Create custom override program\n        mesh.depthProgram = new Program(gl, {\n            vertex,\n            fragment,\n            cullFace: null,\n        });\n    }\n\n    render({ scene }) {\n        // For depth render, replace program with depth override.\n        // Hide meshes not casting shadows.\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.depthProgram;\n            } else {\n                node.isForceVisibility = node.visible;\n                node.visible = false;\n            }\n        });\n\n        // Render the depth shadow map using the light as the camera\n        this.gl.renderer.render({\n            scene,\n            camera: this.light,\n            target: this.target,\n        });\n\n        // Then switch the program back to the normal one\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.colorProgram;\n            } else {\n                node.visible = node.isForceVisibility;\n            }\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    vec4 packRGBA (float v) {\n        vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n        pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n        return pack;\n    }\n\n    void main() {\n        gl_FragColor = packRGBA(gl_FragCoord.z);\n    }\n`;\n","import { Texture } from '../core/Texture.js';\n\n// TODO: Support cubemaps\n// Generate textures using https://github.com/TimvanScherpenzeel/texture-compressor\n\nexport class KTXTexture extends Texture {\n    constructor(gl, { buffer, wrapS = gl.CLAMP_TO_EDGE, wrapT = gl.CLAMP_TO_EDGE, anisotropy = 0 } = {}) {\n        super(gl, {\n            generateMipmaps: false,\n            wrapS,\n            wrapT,\n            anisotropy,\n        });\n\n        if (buffer) return this.parseBuffer(buffer);\n    }\n\n    parseBuffer(buffer) {\n        const ktx = new KhronosTextureContainer(buffer);\n        ktx.mipmaps.isCompressedTexture = true;\n\n        // Update texture\n        this.image = ktx.mipmaps;\n        this.internalFormat = ktx.glInternalFormat;\n        this.minFilter = ktx.numberOfMipmapLevels > 1 ? this.gl.NEAREST_MIPMAP_LINEAR : this.gl.LINEAR;\n\n        // TODO: support cube maps\n        // ktx.numberOfFaces\n    }\n}\n\nfunction KhronosTextureContainer(buffer) {\n    const idCheck = [0xab, 0x4b, 0x54, 0x58, 0x20, 0x31, 0x31, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\n    const id = new Uint8Array(buffer, 0, 12);\n    for (let i = 0; i < id.length; i++) if (id[i] !== idCheck[i]) return console.error('File missing KTX identifier');\n\n    // TODO: Is this always 4? Tested: [android, macos]\n    const size = Uint32Array.BYTES_PER_ELEMENT;\n    const head = new DataView(buffer, 12, 13 * size);\n    const littleEndian = head.getUint32(0, true) === 0x04030201;\n    const glType = head.getUint32(1 * size, littleEndian);\n    if (glType !== 0) return console.warn('only compressed formats currently supported');\n    this.glInternalFormat = head.getUint32(4 * size, littleEndian);\n    let width = head.getUint32(6 * size, littleEndian);\n    let height = head.getUint32(7 * size, littleEndian);\n    this.numberOfFaces = head.getUint32(10 * size, littleEndian);\n    this.numberOfMipmapLevels = Math.max(1, head.getUint32(11 * size, littleEndian));\n    const bytesOfKeyValueData = head.getUint32(12 * size, littleEndian);\n\n    this.mipmaps = [];\n    let offset = 12 + 13 * 4 + bytesOfKeyValueData;\n    for (let level = 0; level < this.numberOfMipmapLevels; level++) {\n        const levelSize = new Int32Array(buffer, offset, 1)[0]; // size per face, since not supporting array cubemaps\n        offset += 4; // levelSize field\n        for (let face = 0; face < this.numberOfFaces; face++) {\n            const data = new Uint8Array(buffer, offset, levelSize);\n            this.mipmaps.push({ data, width, height });\n            offset += levelSize;\n            offset += 3 - ((levelSize + 3) % 4); // add padding for odd sized image\n        }\n        width = width >> 1;\n        height = height >> 1;\n    }\n}\n","import { Texture } from '../core/Texture.js';\nimport { KTXTexture } from './KTXTexture.js';\n\n// For compressed textures, generate using https://github.com/TimvanScherpenzeel/texture-compressor\n\nlet cache = {};\nconst supportedExtensions = [];\n\nexport class TextureLoader {\n    static load(\n        gl,\n        {\n            src, // string or object of extension:src key-values\n            // {\n            //     pvrtc: '...ktx',\n            //     s3tc: '...ktx',\n            //     etc: '...ktx',\n            //     etc1: '...ktx',\n            //     astc: '...ktx',\n            //     webp: '...webp',\n            //     jpg: '...jpg',\n            //     png: '...png',\n            // }\n\n            // Only props relevant to KTXTexture\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            anisotropy = 0,\n\n            // For regular images\n            format = gl.RGBA,\n            internalFormat = format,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = true,\n        } = {}\n    ) {\n        const support = this.getSupportedExtensions(gl);\n        let ext = 'none';\n\n        // If src is string, determine which format from the extension\n        if (typeof src === 'string') {\n            ext = src.split('.').pop().split('?')[0].toLowerCase();\n        }\n\n        // If src is object, use supported extensions and provided list to choose best option\n        // Get first supported match, so put in order of preference\n        if (typeof src === 'object') {\n            for (const prop in src) {\n                if (support.includes(prop.toLowerCase())) {\n                    ext = prop.toLowerCase();\n                    src = src[prop];\n                    break;\n                }\n            }\n        }\n\n        // Stringify props\n        const cacheID =\n            src +\n            wrapS +\n            wrapT +\n            anisotropy +\n            format +\n            internalFormat +\n            generateMipmaps +\n            minFilter +\n            magFilter +\n            premultiplyAlpha +\n            unpackAlignment +\n            flipY +\n            gl.renderer.id;\n\n        // Check cache for existing texture\n        if (cache[cacheID]) return cache[cacheID];\n\n        let texture;\n        switch (ext) {\n            case 'ktx':\n            case 'pvrtc':\n            case 's3tc':\n            case 'etc':\n            case 'etc1':\n            case 'astc':\n                // Load compressed texture using KTX format\n                texture = new KTXTexture(gl, {\n                    src,\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                });\n                texture.loaded = this.loadKTX(src, texture);\n                break;\n            case 'webp':\n            case 'jpg':\n            case 'jpeg':\n            case 'png':\n                texture = new Texture(gl, {\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    format,\n                    internalFormat,\n                    generateMipmaps,\n                    minFilter,\n                    magFilter,\n                    premultiplyAlpha,\n                    unpackAlignment,\n                    flipY,\n                });\n                texture.loaded = this.loadImage(gl, src, texture);\n                break;\n            default:\n                console.warn('No supported format supplied');\n                texture = new Texture(gl);\n        }\n\n        texture.ext = ext;\n        cache[cacheID] = texture;\n        return texture;\n    }\n\n    static getSupportedExtensions(gl) {\n        if (supportedExtensions.length) return supportedExtensions;\n\n        const extensions = {\n            pvrtc: gl.renderer.getExtension('WEBGL_compressed_texture_pvrtc') || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'),\n            s3tc:\n                gl.renderer.getExtension('WEBGL_compressed_texture_s3tc') ||\n                gl.renderer.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||\n                gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc'),\n            etc: gl.renderer.getExtension('WEBGL_compressed_texture_etc'),\n            etc1: gl.renderer.getExtension('WEBGL_compressed_texture_etc1'),\n            astc: gl.renderer.getExtension('WEBGL_compressed_texture_astc'),\n        };\n\n        for (const ext in extensions) if (extensions[ext]) supportedExtensions.push(ext);\n\n        // Check for WebP support\n        if (detectWebP) supportedExtensions.push('webp');\n\n        // Formats supported by all\n        supportedExtensions.push('png', 'jpg');\n\n        return supportedExtensions;\n    }\n\n    static loadKTX(src, texture) {\n        return fetch(src)\n            .then((res) => res.arrayBuffer())\n            .then((buffer) => texture.parseBuffer(buffer));\n    }\n\n    static loadImage(gl, src, texture) {\n        return decodeImage(src).then((imgBmp) => {\n            // Catch non POT textures and update params to avoid errors\n            if (!powerOfTwo(imgBmp.width) || !powerOfTwo(imgBmp.height)) {\n                if (texture.generateMipmaps) texture.generateMipmaps = false;\n                if (texture.minFilter === gl.NEAREST_MIPMAP_LINEAR) texture.minFilter = gl.LINEAR;\n                if (texture.wrapS === gl.REPEAT) texture.wrapS = texture.wrapT = gl.CLAMP_TO_EDGE;\n            }\n\n            texture.image = imgBmp;\n\n            // For createImageBitmap, close once uploaded\n            texture.onUpdate = () => {\n                if (imgBmp.close) imgBmp.close();\n                texture.onUpdate = null;\n            };\n\n            return imgBmp;\n        });\n    }\n\n    static clearCache() {\n        cache = {};\n    }\n}\n\nfunction detectWebP() {\n    return document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0;\n}\n\nfunction powerOfTwo(value) {\n    return Math.log2(value) % 1 === 0;\n}\n\nfunction decodeImage(src) {\n    return new Promise((resolve) => {\n        const img = new Image();\n        img.crossOrigin = '';\n        img.src = src;\n\n        // Only chrome's implementation of createImageBitmap is fully supported\n        const isChrome = navigator.userAgent.toLowerCase().includes('chrome');\n        if (!!window.createImageBitmap && isChrome) {\n            img.onload = () => {\n                createImageBitmap(img, {\n                    imageOrientation: 'flipY',\n                    premultiplyAlpha: 'none',\n                }).then((imgBmp) => {\n                    resolve(imgBmp);\n                });\n            };\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst tmpVec3A = new Vec3();\nconst tmpVec3B = new Vec3();\nconst tmpVec3C = new Vec3();\nconst tmpVec3D = new Vec3();\n\nconst tmpQuatA = new Quat();\nconst tmpQuatB = new Quat();\nconst tmpQuatC = new Quat();\nconst tmpQuatD = new Quat();\n\nexport class GLTFAnimation {\n    constructor(data, weight = 1) {\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = weight;\n\n        // Set to false to not apply modulo to elapsed against duration\n        this.loop = true;\n\n        // Get duration from largest final time in all channels\n        this.duration = data.reduce((a, { times }) => Math.max(a, times[times.length - 1]), 0);\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.loop ? this.elapsed % this.duration : Math.min(this.elapsed, this.duration);\n\n        this.data.forEach(({ node, transform, interpolation, times, values }) => {\n            // Get index of two time values elapsed is between\n            const prevIndex =\n                Math.max(\n                    1,\n                    times.findIndex((t) => t > elapsed)\n                ) - 1;\n            const nextIndex = prevIndex + 1;\n\n            // Get linear blend/alpha between the two\n            let alpha = (elapsed - times[prevIndex]) / (times[nextIndex] - times[prevIndex]);\n            if (interpolation === 'STEP') alpha = 0;\n\n            let prevVal = tmpVec3A;\n            let prevTan = tmpVec3B;\n            let nextTan = tmpVec3C;\n            let nextVal = tmpVec3D;\n            let size = 3;\n\n            if (transform === 'quaternion') {\n                prevVal = tmpQuatA;\n                prevTan = tmpQuatB;\n                nextTan = tmpQuatC;\n                nextVal = tmpQuatD;\n                size = 4;\n            }\n\n            if (interpolation === 'CUBICSPLINE') {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size * 3 + size * 1);\n                prevTan.fromArray(values, prevIndex * size * 3 + size * 2);\n                nextTan.fromArray(values, nextIndex * size * 3 + size * 0);\n                nextVal.fromArray(values, nextIndex * size * 3 + size * 1);\n\n                // interpolate for final value\n                prevVal = this.cubicSplineInterpolate(alpha, prevVal, prevTan, nextTan, nextVal);\n                if (size === 4) prevVal.normalize();\n            } else {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size);\n                nextVal.fromArray(values, nextIndex * size);\n\n                // interpolate for final value\n                if (size === 4) prevVal.slerp(nextVal, alpha);\n                else prevVal.lerp(nextVal, alpha);\n            }\n\n            // interpolate between multiple possible animations\n            if (size === 4) node[transform].slerp(prevVal, weight);\n            else node[transform].lerp(prevVal, weight);\n        });\n    }\n\n    cubicSplineInterpolate(t, prevVal, prevTan, nextTan, nextVal) {\n        const t2 = t * t;\n        const t3 = t2 * t;\n\n        const s2 = 3 * t2 - 2 * t3;\n        const s3 = t3 - t2;\n        const s0 = 1 - s2;\n        const s1 = s3 - t2 + t;\n\n        for (let i = 0; i < prevVal.length; i++) {\n            prevVal[i] = s0 * prevVal[i] + s1 * (1 - t) * prevTan[i] + s2 * nextVal[i] + s3 * t * nextTan[i];\n        }\n\n        return prevVal;\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\n\nconst tempMat4 = new Mat4();\nconst identity = new Mat4();\n\nexport class GLTFSkin extends Mesh {\n    constructor(gl, { skeleton, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n        this.skeleton = skeleton;\n        this.program = program;\n        this.createBoneTexture();\n        this.animations = [];\n    }\n\n    createBoneTexture() {\n        if (!this.skeleton.joints.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.skeleton.joints.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    // addAnimation(data) {\n    //     const animation = new Animation({ objects: this.bones, data });\n    //     this.animations.push(animation);\n    //     return animation;\n    // }\n\n    // updateAnimations() {\n    //     // Calculate combined animation weight\n    //     let total = 0;\n    //     this.animations.forEach((animation) => (total += animation.weight));\n\n    //     this.animations.forEach((animation, i) => {\n    //         // force first animation to set in order to reset frame\n    //         animation.update(total, i === 0);\n    //     });\n    // }\n\n    updateUniforms() {\n        // Update bone texture\n        this.skeleton.joints.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n    }\n\n    draw({ camera } = {}) {\n        if (!this.program.uniforms.boneTexture) {\n            Object.assign(this.program.uniforms, {\n                boneTexture: { value: this.boneTexture },\n                boneTextureSize: { value: this.boneTextureSize },\n            });\n        }\n\n        this.updateUniforms();\n\n        // Switch the world matrix with identity to ignore any transforms\n        // on the mesh itself - only use skeleton's transforms\n        const _worldMatrix = this.worldMatrix;\n        this.worldMatrix = identity;\n\n        super.draw({ camera });\n\n        // Switch back to leave identity untouched\n        this.worldMatrix = _worldMatrix;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Transform } from '../core/Transform.js';\nimport { Texture } from '../core/Texture.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { GLTFAnimation } from './GLTFAnimation.js';\nimport { GLTFSkin } from './GLTFSkin.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { NormalProgram } from './NormalProgram.js';\n\n// Supports\n// [x] Geometry\n// [ ] Sparse support\n// [x] Nodes and Hierarchy\n// [x] Instancing\n// [ ] Morph Targets\n// [x] Skins\n// [ ] Materials\n// [x] Textures\n// [x] Animation\n// [ ] Cameras\n// [ ] Extensions\n// [x] GLB support\n\n// TODO: Sparse accessor packing? For morph targets basically\n// TODO: init accessor missing bufferView with 0s\n// TODO: morph target animations\n// TODO: what to do if multiple instances are in different groups? Only uses local matrices\n// TODO: what if instancing isn't wanted? Eg collision maps\n// TODO: ie11 fallback for TextDecoder?\n\nconst TYPE_ARRAY = {\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array,\n    'image/jpeg': Uint8Array,\n    'image/png': Uint8Array,\n};\n\nconst TYPE_SIZE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16,\n};\n\nconst ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex',\n};\n\nconst TRANSFORMS = {\n    translation: 'position',\n    rotation: 'quaternion',\n    scale: 'scale',\n};\n\nexport class GLTFLoader {\n    static async load(gl, src) {\n        const dir = src.split('/').slice(0, -1).join('/') + '/';\n\n        // load main description json\n        const desc = await this.parseDesc(src);\n\n        return await this.parse(gl, desc, dir);\n    }\n\n    static async parse(gl, desc, dir) {\n        if (desc.asset === undefined || desc.asset.version[0] < 2) console.warn('Only GLTF >=2.0 supported. Attempting to parse.');\n\n        // Load buffers async\n        const buffers = await this.loadBuffers(desc, dir);\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        gl.renderer.bindVertexArray(null);\n\n        // Create gl buffers from bufferViews\n        const bufferViews = this.parseBufferViews(gl, desc, buffers);\n\n        // Create images from either bufferViews or separate image files\n        const images = this.parseImages(gl, desc, dir, bufferViews);\n\n        const textures = this.parseTextures(gl, desc, images);\n\n        // Just pass through material data for now\n        const materials = this.parseMaterials(gl, desc, textures);\n\n        // Fetch the inverse bind matrices for skeleton joints\n        const skins = this.parseSkins(gl, desc, bufferViews);\n\n        // Create geometries for each mesh primitive\n        const meshes = this.parseMeshes(gl, desc, bufferViews, materials, skins);\n\n        // Create transforms, meshes and hierarchy\n        const nodes = this.parseNodes(gl, desc, meshes, skins);\n\n        // Place nodes in skeletons\n        this.populateSkins(skins, nodes);\n\n        // Create animation handlers\n        const animations = this.parseAnimations(gl, desc, nodes, bufferViews);\n\n        // Get top level nodes for each scene\n        const scenes = this.parseScenes(desc, nodes);\n        const scene = scenes[desc.scene];\n\n        // Remove null nodes (instanced transforms)\n        for (let i = nodes.length; i >= 0; i--) if (!nodes[i]) nodes.splice(i, 1);\n\n        return {\n            json: desc,\n            buffers,\n            bufferViews,\n            images,\n            textures,\n            materials,\n            meshes,\n            nodes,\n            animations,\n            scenes,\n            scene,\n        };\n    }\n\n    static async parseDesc(src) {\n        if (!src.match(/\\.glb$/)) {\n            return await fetch(src).then((res) => res.json());\n        } else {\n            return await fetch(src)\n                .then((res) => res.arrayBuffer())\n                .then((glb) => this.unpackGLB(glb));\n        }\n    }\n\n    // From https://github.com/donmccurdy/glTF-Transform/blob/e4108cc/packages/core/src/io/io.ts#L32\n    static unpackGLB(glb) {\n        // Decode and verify GLB header.\n        const header = new Uint32Array(glb, 0, 3);\n        if (header[0] !== 0x46546c67) {\n            throw new Error('Invalid glTF asset.');\n        } else if (header[1] !== 2) {\n            throw new Error(`Unsupported glTF binary version, \"${header[1]}\".`);\n        }\n        // Decode and verify chunk headers.\n        const jsonChunkHeader = new Uint32Array(glb, 12, 2);\n        const jsonByteOffset = 20;\n        const jsonByteLength = jsonChunkHeader[0];\n        if (jsonChunkHeader[1] !== 0x4e4f534a) {\n            throw new Error('Unexpected GLB layout.');\n        }\n\n        // Decode JSON.\n        const jsonText = new TextDecoder().decode(glb.slice(jsonByteOffset, jsonByteOffset + jsonByteLength));\n        const json = JSON.parse(jsonText);\n        // JSON only\n        if (jsonByteOffset + jsonByteLength === glb.byteLength) return json;\n\n        const binaryChunkHeader = new Uint32Array(glb, jsonByteOffset + jsonByteLength, 2);\n        if (binaryChunkHeader[1] !== 0x004e4942) {\n            throw new Error('Unexpected GLB layout.');\n        }\n        // Decode content.\n        const binaryByteOffset = jsonByteOffset + jsonByteLength + 8;\n        const binaryByteLength = binaryChunkHeader[0];\n        const binary = glb.slice(binaryByteOffset, binaryByteOffset + binaryByteLength);\n        // Attach binary to buffer\n        json.buffers[0].binary = binary;\n        return json;\n    }\n\n    // Threejs GLTF Loader https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/GLTFLoader.js#L1085\n    static resolveURI(uri, dir) {\n        // Invalid URI\n        if (typeof uri !== 'string' || uri === '') return '';\n\n        // Host Relative URI\n        if (/^https?:\\/\\//i.test(dir) && /^\\//.test(uri)) {\n            dir = dir.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URI http://, https://, //\n        if (/^(https?:)?\\/\\//i.test(uri)) return uri;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(uri)) return uri;\n\n        // Blob URI\n        if (/^blob:.*$/i.test(uri)) return uri;\n\n        // Relative URI\n        return dir + uri;\n    }\n\n    static async loadBuffers(desc, dir) {\n        if (!desc.buffers) return null;\n        return await Promise.all(\n            desc.buffers.map((buffer) => {\n                // For GLB, binary buffer ready to go\n                if (buffer.binary) return buffer.binary;\n                const uri = this.resolveURI(buffer.uri, dir);\n                return fetch(uri).then((res) => res.arrayBuffer());\n            })\n        );\n    }\n\n    static parseBufferViews(gl, desc, buffers) {\n        if (!desc.bufferViews) return null;\n        // Clone to leave description pure\n        const bufferViews = desc.bufferViews.map((o) => Object.assign({}, o));\n\n        desc.meshes &&\n            desc.meshes.forEach(({ primitives }) => {\n                primitives.forEach(({ attributes, indices }) => {\n                    // Flag bufferView as an attribute, so it knows to create a gl buffer\n                    for (let attr in attributes) bufferViews[desc.accessors[attributes[attr]].bufferView].isAttribute = true;\n\n                    if (indices === undefined) return;\n                    bufferViews[desc.accessors[indices].bufferView].isAttribute = true;\n\n                    // Make sure indices bufferView have a target property for gl buffer binding\n                    bufferViews[desc.accessors[indices].bufferView].target = gl.ELEMENT_ARRAY_BUFFER;\n                });\n            });\n\n        // Get componentType of each bufferView from the accessors\n        desc.accessors.forEach(({ bufferView: i, componentType }) => {\n            bufferViews[i].componentType = componentType;\n        });\n\n        // Get mimetype of bufferView from images\n        desc.images &&\n            desc.images.forEach(({ uri, bufferView: i, mimeType }) => {\n                if (i === undefined) return;\n                bufferViews[i].mimeType = mimeType;\n            });\n\n        // Push each bufferView to the GPU as a separate buffer\n        bufferViews.forEach(\n            (\n                {\n                    buffer: bufferIndex, // required\n                    byteOffset = 0, // optional\n                    byteLength, // required\n                    byteStride, // optional\n                    target = gl.ARRAY_BUFFER, // optional, added above for elements\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n\n                    componentType, // optional, added from accessor above\n                    mimeType, // optional, added from images above\n                    isAttribute,\n                },\n                i\n            ) => {\n                const TypeArray = TYPE_ARRAY[componentType || mimeType];\n                const elementBytes = TypeArray.BYTES_PER_ELEMENT;\n\n                const data = new TypeArray(buffers[bufferIndex], byteOffset, byteLength / elementBytes);\n                bufferViews[i].data = data;\n\n                if (!isAttribute) return;\n                // Create gl buffers for the bufferView, pushing it to the GPU\n                const buffer = gl.createBuffer();\n                gl.bindBuffer(target, buffer);\n                gl.renderer.state.boundBuffer = buffer;\n                gl.bufferData(target, data, gl.STATIC_DRAW);\n                bufferViews[i].buffer = buffer;\n            }\n        );\n\n        return bufferViews;\n    }\n\n    static parseImages(gl, desc, dir, bufferViews) {\n        if (!desc.images) return null;\n        return desc.images.map(({ uri, bufferView: bufferViewIndex, mimeType, name }) => {\n            const image = new Image();\n            image.name = name;\n            if (uri) {\n                image.src = this.resolveURI(uri, dir);\n            } else if (bufferViewIndex !== undefined) {\n                const { data } = bufferViews[bufferViewIndex];\n                const blob = new Blob([data], { type: mimeType });\n                image.src = URL.createObjectURL(blob);\n            }\n            image.ready = new Promise((res) => {\n                image.onload = () => res();\n            });\n            return image;\n        });\n    }\n\n    static parseTextures(gl, desc, images) {\n        if (!desc.textures) return null;\n        return desc.textures.map(({ sampler: samplerIndex, source: sourceIndex, name, extensions, extras }) => {\n            const options = {\n                flipY: false,\n                wrapS: gl.REPEAT, // Repeat by default, opposed to OGL's clamp by default\n                wrapT: gl.REPEAT,\n            };\n            const sampler = samplerIndex !== undefined ? desc.samplers[samplerIndex] : null;\n            if (sampler) {\n                ['magFilter', 'minFilter', 'wrapS', 'wrapT'].forEach((prop) => {\n                    if (sampler[prop]) options[prop] = sampler[prop];\n                });\n            }\n            const texture = new Texture(gl, options);\n            texture.name = name;\n            const image = images[sourceIndex];\n            image.ready.then(() => (texture.image = image));\n\n            return texture;\n        });\n    }\n\n    static parseMaterials(gl, desc, textures) {\n        if (!desc.materials) return null;\n        return desc.materials.map(\n            ({\n                name,\n                extensions,\n                extras,\n                pbrMetallicRoughness = {},\n                normalTexture,\n                occlusionTexture,\n                emissiveTexture,\n                emissiveFactor = [0, 0, 0],\n                alphaMode = 'OPAQUE',\n                alphaCutoff = 0.5,\n                doubleSided = false,\n            }) => {\n                const {\n                    baseColorFactor = [1, 1, 1, 1],\n                    baseColorTexture,\n                    metallicFactor = 1,\n                    roughnessFactor = 1,\n                    metallicRoughnessTexture,\n                    //   extensions,\n                    //   extras,\n                } = pbrMetallicRoughness;\n\n                if (baseColorTexture) {\n                    baseColorTexture.texture = textures[baseColorTexture.index];\n                    // texCoord\n                }\n                if (normalTexture) {\n                    normalTexture.texture = textures[normalTexture.index];\n                    // scale: 1\n                    // texCoord\n                }\n                if (metallicRoughnessTexture) {\n                    metallicRoughnessTexture.texture = textures[metallicRoughnessTexture.index];\n                    // texCoord\n                }\n                if (occlusionTexture) {\n                    occlusionTexture.texture = textures[occlusionTexture.index];\n                    // strength 1\n                    // texCoord\n                }\n                if (emissiveTexture) {\n                    emissiveTexture.texture = textures[emissiveTexture.index];\n                    // texCoord\n                }\n\n                return {\n                    name,\n                    baseColorFactor,\n                    baseColorTexture,\n                    metallicFactor,\n                    roughnessFactor,\n                    metallicRoughnessTexture,\n                    normalTexture,\n                    occlusionTexture,\n                    emissiveTexture,\n                    emissiveFactor,\n                    alphaMode,\n                    alphaCutoff,\n                    doubleSided,\n                };\n            }\n        );\n    }\n\n    static parseSkins(gl, desc, bufferViews) {\n        if (!desc.skins) return null;\n        return desc.skins.map(\n            ({\n                inverseBindMatrices, // optional\n                skeleton, // optional\n                joints, // required\n                // name,\n                // extensions,\n                // extras,\n            }) => {\n                return {\n                    inverseBindMatrices: this.parseAccessor(inverseBindMatrices, desc, bufferViews),\n                    skeleton,\n                    joints,\n                };\n            }\n        );\n    }\n\n    static parseMeshes(gl, desc, bufferViews, materials, skins) {\n        if (!desc.meshes) return null;\n        return desc.meshes.map(\n            (\n                {\n                    primitives, // required\n                    weights, // optional\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n                },\n                meshIndex\n            ) => {\n                // TODO: weights stuff ?\n                // Parse through nodes to see how many instances there are\n                // and if there is a skin attached\n                let numInstances = 0;\n                let skinIndex = false;\n                desc.nodes &&\n                    desc.nodes.forEach(({ mesh, skin }) => {\n                        if (mesh === meshIndex) {\n                            numInstances++;\n                            if (skin !== undefined) skinIndex = skin;\n                        }\n                    });\n\n                primitives = this.parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances).map(({ geometry, program, mode }) => {\n                    // Create either skinned mesh or regular mesh\n                    const mesh =\n                        typeof skinIndex === 'number'\n                            ? new GLTFSkin(gl, { skeleton: skins[skinIndex], geometry, program, mode })\n                            : new Mesh(gl, { geometry, program, mode });\n                    mesh.name = name;\n                    if (mesh.geometry.isInstanced) {\n                        // Tag mesh so that nodes can add their transforms to the instance attribute\n                        mesh.numInstances = numInstances;\n                        // Avoid incorrect culling for instances\n                        mesh.frustumCulled = false;\n                    }\n                    return mesh;\n                });\n\n                return {\n                    primitives,\n                    weights,\n                    name,\n                };\n            }\n        );\n    }\n\n    static parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances) {\n        return primitives.map(\n            ({\n                attributes, // required\n                indices, // optional\n                material: materialIndex, // optional\n                mode = 4, // optional\n                targets, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                const geometry = new Geometry(gl);\n\n                // Add each attribute found in primitive\n                for (let attr in attributes) {\n                    geometry.addAttribute(ATTRIBUTES[attr], this.parseAccessor(attributes[attr], desc, bufferViews));\n                }\n\n                // Add index attribute if found\n                if (indices !== undefined) {\n                    geometry.addAttribute('index', this.parseAccessor(indices, desc, bufferViews));\n                }\n\n                // Add instanced transform attribute if multiple instances\n                if (numInstances > 1) {\n                    geometry.addAttribute('instanceMatrix', {\n                        instanced: 1,\n                        size: 16,\n                        data: new Float32Array(numInstances * 16),\n                    });\n                }\n\n                // TODO: materials\n                const program = new NormalProgram(gl);\n                if (materialIndex !== undefined) {\n                    program.gltfMaterial = materials[materialIndex];\n                }\n\n                return {\n                    geometry,\n                    program,\n                    mode,\n                };\n            }\n        );\n    }\n\n    static parseAccessor(index, desc, bufferViews) {\n        // TODO: init missing bufferView with 0s\n        // TODO: support sparse\n\n        const {\n            bufferView: bufferViewIndex, // optional\n            byteOffset = 0, // optional\n            componentType, // required\n            normalized = false, // optional\n            count, // required\n            type, // required\n            min, // optional\n            max, // optional\n            sparse, // optional\n            // name, // optional\n            // extensions, // optional\n            // extras, // optional\n        } = desc.accessors[index];\n\n        const {\n            data, // attached in parseBufferViews\n            buffer, // replaced to be the actual GL buffer\n            // byteOffset = 0, // applied in parseBufferViews\n            // byteLength, // applied in parseBufferViews\n            byteStride = 0,\n            target,\n            // name,\n            // extensions,\n            // extras,\n        } = bufferViews[bufferViewIndex];\n\n        const size = TYPE_SIZE[type];\n\n        // Return attribute data\n        return {\n            data, // Optional. Used for computing bounds if no min/max\n            size,\n            type: componentType,\n            normalized,\n            buffer,\n            stride: byteStride,\n            offset: byteOffset,\n            count,\n            min,\n            max,\n        };\n    }\n\n    static parseNodes(gl, desc, meshes, skins) {\n        if (!desc.nodes) return null;\n        const nodes = desc.nodes.map(\n            ({\n                camera, // optional\n                children, // optional\n                skin: skinIndex, // optional\n                matrix, // optional\n                mesh: meshIndex, // optional\n                rotation, // optional\n                scale, // optional\n                translation, // optional\n                weights, // optional\n                name, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                const node = new Transform();\n                if (name) node.name = name;\n\n                // Apply transformations\n                if (matrix) {\n                    node.matrix.copy(matrix);\n                    node.decompose();\n                } else {\n                    if (rotation) node.quaternion.copy(rotation);\n                    if (scale) node.scale.copy(scale);\n                    if (translation) node.position.copy(translation);\n                    node.updateMatrix();\n                }\n\n                // Flags for avoiding duplicate transforms and removing unused instance nodes\n                let isInstanced = false;\n                let isFirstInstance = true;\n\n                // add mesh if included\n                if (meshIndex !== undefined) {\n                    meshes[meshIndex].primitives.forEach((mesh) => {\n                        if (mesh.geometry.isInstanced) {\n                            isInstanced = true;\n                            if (!mesh.instanceCount) {\n                                mesh.instanceCount = 0;\n                            } else {\n                                isFirstInstance = false;\n                            }\n                            node.matrix.toArray(mesh.geometry.attributes.instanceMatrix.data, mesh.instanceCount * 16);\n                            mesh.instanceCount++;\n\n                            if (mesh.instanceCount === mesh.numInstances) {\n                                // Remove properties once all instances added\n                                delete mesh.numInstances;\n                                delete mesh.instanceCount;\n                                // Flag attribute as dirty\n                                mesh.geometry.attributes.instanceMatrix.needsUpdate = true;\n                            }\n                        }\n\n                        // For instances, only the first node will actually have the mesh\n                        if (isInstanced) {\n                            if (isFirstInstance) mesh.setParent(node);\n                        } else {\n                            mesh.setParent(node);\n                        }\n                    });\n                }\n\n                // Reset node if instanced to not duplicate transforms\n                if (isInstanced) {\n                    // Remove unused nodes just providing an instance transform\n                    if (!isFirstInstance) return null;\n                    // Avoid duplicate transform for node containing the instanced mesh\n                    node.matrix.identity();\n                    node.decompose();\n                }\n\n                return node;\n            }\n        );\n\n        desc.nodes.forEach(({ children = [] }, i) => {\n            // Set hierarchy now all nodes created\n            children.forEach((childIndex) => {\n                if (!nodes[childIndex]) return;\n                nodes[childIndex].setParent(nodes[i]);\n            });\n        });\n\n        return nodes;\n    }\n\n    static populateSkins(skins, nodes) {\n        if (!skins) return;\n        skins.forEach((skin) => {\n            skin.joints = skin.joints.map((i, index) => {\n                const joint = nodes[i];\n                joint.bindInverse = new Mat4(...skin.inverseBindMatrices.data.slice(index * 16, (index + 1) * 16));\n                return joint;\n            });\n            if (skin.skeleton) skin.skeleton = nodes[skin.skeleton];\n        });\n    }\n\n    static parseAnimations(gl, desc, nodes, bufferViews) {\n        if (!desc.animations) return null;\n        return desc.animations.map(\n            ({\n                channels, // required\n                samplers, // required\n                name, // optional\n                // extensions, // optional\n                // extras,  // optional\n            }) => {\n                const data = channels.map(\n                    ({\n                        sampler: samplerIndex, // required\n                        target, // required\n                        // extensions, // optional\n                        // extras, // optional\n                    }) => {\n                        const {\n                            input: inputIndex, // required\n                            interpolation = 'LINEAR',\n                            output: outputIndex, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = samplers[samplerIndex];\n\n                        const {\n                            node: nodeIndex, // optional - TODO: when is it not included?\n                            path, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = target;\n\n                        const node = nodes[nodeIndex];\n                        const transform = TRANSFORMS[path];\n                        const timesAcc = this.parseAccessor(inputIndex, desc, bufferViews);\n                        const times = timesAcc.data.slice(timesAcc.offset / 4, timesAcc.offset / 4 + timesAcc.count * timesAcc.size);\n                        const valuesAcc = this.parseAccessor(outputIndex, desc, bufferViews);\n                        const values = valuesAcc.data.slice(valuesAcc.offset / 4, valuesAcc.offset / 4 + valuesAcc.count * valuesAcc.size);\n\n                        return {\n                            node,\n                            transform,\n                            interpolation,\n                            times,\n                            values,\n                        };\n                    }\n                );\n\n                return {\n                    name,\n                    animation: new GLTFAnimation(data),\n                };\n            }\n        );\n    }\n\n    static parseScenes(desc, nodes) {\n        if (!desc.scenes) return null;\n        return desc.scenes.map(\n            ({\n                nodes: nodesIndices = [],\n                name, // optional\n                extensions,\n                extras,\n            }) => {\n                return nodesIndices.reduce((map, i) => {\n                    // Don't add null nodes (instanced transforms)\n                    if (nodes[i]) map.push(nodes[i]);\n                    return map;\n                }, []);\n            }\n        );\n    }\n}\n","// Core\nexport { Geometry } from './core/Geometry.js';\nexport { Program } from './core/Program.js';\nexport { Renderer } from './core/Renderer.js';\nexport { Camera } from './core/Camera.js';\nexport { Transform } from './core/Transform.js';\nexport { Mesh } from './core/Mesh.js';\nexport { Texture } from './core/Texture.js';\nexport { RenderTarget } from './core/RenderTarget.js';\n\n// Maths\nexport { Color } from './math/Color.js';\nexport { Euler } from './math/Euler.js';\nexport { Mat3 } from './math/Mat3.js';\nexport { Mat4 } from './math/Mat4.js';\nexport { Quat } from './math/Quat.js';\nexport { Vec2 } from './math/Vec2.js';\nexport { Vec3 } from './math/Vec3.js';\nexport { Vec4 } from './math/Vec4.js';\n\n// Extras\nexport { Plane } from './extras/Plane.js';\nexport { Box } from './extras/Box.js';\nexport { Sphere } from './extras/Sphere.js';\nexport { Cylinder } from './extras/Cylinder.js';\nexport { Triangle } from './extras/Triangle.js';\nexport { Torus } from './extras/Torus.js';\nexport { Orbit } from './extras/Orbit.js';\nexport { Raycast } from './extras/Raycast.js';\nexport { Curve } from './extras/Curve.js';\nexport { Post } from './extras/Post.js';\nexport { Skin } from './extras/Skin.js';\nexport { Animation } from './extras/Animation.js';\nexport { Text } from './extras/Text.js';\nexport { NormalProgram } from './extras/NormalProgram.js';\nexport { Flowmap } from './extras/Flowmap.js';\nexport { GPGPU } from './extras/GPGPU.js';\nexport { Polyline } from './extras/Polyline.js';\nexport { Shadow } from './extras/Shadow.js';\nexport { KTXTexture } from './extras/KTXTexture.js';\nexport { TextureLoader } from './extras/TextureLoader.js';\nexport { GLTFLoader } from './extras/GLTFLoader.js';\nexport { GLTFSkin } from './extras/GLTFSkin.js';\n","export const init = (callback) =>\n  document.addEventListener('DOMContentLoaded', callback);\n\nexport const shaderTaggedTemplateLiteral = (strings, ...exprs) =>\n  strings.reduce((acc, str, i) => acc.concat(str, exprs[i]), []).join('');\n\nexport const vert = shaderTaggedTemplateLiteral;\nexport const frag = shaderTaggedTemplateLiteral;\n","import {\n  Flowmap,\n  Geometry,\n  Mesh,\n  Program,\n  Renderer,\n  Texture,\n  Vec2,\n  Vec4,\n} from 'ogl';\n\nimport { vert, frag } from '../utils';\n\nexport default (target) => {\n  const vertexShader = vert`\n      attribute vec2 uv;\n      attribute vec2 position;\n\n      varying vec2 vUv;\n\n      void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0.0, 1.0);\n      }\n    `;\n\n  const fragmentShader = frag`\n      precision highp float;\n      precision highp int;\n\n      varying vec2 vUv;\n\n      uniform float uTime;\n      uniform vec2 uMouse;\n      uniform float uUseMouse;\n      uniform float uNoiseMultiplier;\n      uniform sampler2D uTexture;\n      uniform sampler2D uFlow;\n      uniform vec4 uRes;\n\n      void main() {\n        vec3 flow = texture2D(uFlow, vUv).rgb;\n        vec2 uv = 0.5 * gl_FragCoord.xy / uRes.xy;\n\n        vec2 baseUV = (uv - vec2(0.5)) * uRes.zw + vec2(0.5) - flow.xy / 100.0;\n        vec2 rUV = baseUV - flow.xy / 150.0;\n        vec2 gUV = baseUV - flow.xy / 100.0;\n        vec2 bUV = baseUV - flow.xy / 50.0;\n\n        vec3 tex = vec3(\n          texture2D(uTexture, rUV).r,\n          texture2D(uTexture, gUV).g,\n          texture2D(uTexture, bUV).b\n        );\n\n        gl_FragColor = vec4(tex, 1.0);\n      }\n    `;\n\n  const I = {\n    default: target.querySelector('img'),\n  };\n\n  const S = {\n    frameID: -1,\n\n    mouse: new Vec2(0.5),\n    velocity: new Vec2(),\n\n    previousTime: null,\n    previousMouse: new Vec2(),\n\n    aspect: 1,\n    image: {\n      url: '',\n      size: {\n        x: I.default.offsetWidth,\n        y: I.default.offsetHeight,\n      },\n    },\n\n    renderer: null,\n    gl: null,\n    canvas: null,\n\n    flowmap: null,\n    geometry: null,\n    texture: null,\n    program: null,\n    mesh: null,\n  };\n\n  const computeAspect = () => {\n    const imageAspect = I.default.naturalHeight / I.default.naturalWidth;\n    const windowAspect = {\n      h: target.offsetHeight / target.offsetWidth,\n      v: target.offsetWidth / target.offsetHeight,\n    };\n\n    if (windowAspect.h < imageAspect) {\n      return { ah: 1, av: windowAspect.h / imageAspect };\n    }\n\n    return { ah: windowAspect.v * imageAspect, av: 1 };\n  };\n\n  const resize = () => {\n    const { ah, av } = computeAspect();\n\n    S.mesh.program.uniforms.uRes.value = new Vec4(\n      target.offsetWidth,\n      target.offsetHeight,\n      ah,\n      av\n    );\n\n    S.renderer.setSize(target.offsetWidth, target.offsetHeight);\n    S.aspect = target.offsetWidth / target.offsetHeight;\n  };\n\n  const updateMouse = (event) => {\n    const { offsetX, offsetY } = event;\n\n    // Do not prevent default as this blocks clicks on links on touch devices\n    // event.preventDefault();\n\n    const P = {\n      x: event.x + window.pageXOffset - target.offsetLeft,\n      y: event.y + window.pageYOffset - target.offsetTop,\n    };\n\n    if (event.x === undefined) {\n      P.x = offsetX + window.pageXOffset - target.offsetLeft;\n      P.y = offsetY + window.pageYOffset - target.offsetTop;\n    }\n\n    // Get mouse value in 0 to 1 range, with y flipped\n    S.mouse.set(P.x / S.gl.renderer.width, 1.0 - P.y / S.gl.renderer.height);\n\n    // Calculate velocity\n    if (!S.previousTime) {\n      // First frame\n      S.previousTime = window.performance.now();\n      S.previousMouse.set(P.x, P.y);\n    }\n\n    const deltaX = P.x - S.previousMouse.x;\n    const deltaY = P.y - S.previousMouse.y;\n\n    S.previousMouse.set(P.x, P.y);\n\n    const time = window.performance.now();\n\n    // Avoid dividing by 0\n    const delta = Math.max(10.4, time - S.previousTime);\n\n    S.previousTime = time;\n    S.velocity.x = deltaX / delta;\n    S.velocity.y = deltaY / delta;\n\n    // Flag update to prevent hanging velocity values when not moving\n    S.velocity.needsUpdate = true;\n  };\n\n  const init = () => {\n    S.renderer = new Renderer({\n      dpr: 2,\n      alpha: true,\n      premultipliedAlpha: true,\n    });\n\n    S.gl = S.renderer.gl;\n    S.canvas = S.gl.canvas;\n\n    S.canvas.setAttribute('id', 'scene');\n    target.appendChild(S.canvas);\n\n    S.flowmap = new Flowmap(S.gl, {\n      size: 512,\n      falloff: 0.95,\n      dissipation: 0.96,\n    });\n\n    S.geometry = new Geometry(S.gl, {\n      position: {\n        size: 2,\n        data: new Float32Array([-1, -1, 3, -1, -1, 3]),\n      },\n      uv: {\n        size: 2,\n        data: new Float32Array([0, 0, 2, 0, 0, 2]),\n      },\n    });\n\n    S.texture = new Texture(S.gl, {\n      minFilter: S.gl.LINEAR,\n      magFilter: S.gl.LINEAR,\n      premultiplyAlpha: true,\n    });\n\n    const img = new Image();\n\n    img.addEventListener('load', () => (S.texture.image = img));\n    img.src = I.default.src;\n\n    const { ah, av } = computeAspect();\n\n    S.program = new Program(S.gl, {\n      vertex: vertexShader,\n      fragment: fragmentShader,\n      uniforms: {\n        uTime: { value: 0 },\n        uMouse: { value: S.mouse },\n        uUseMouse: { value: 1.0 },\n        uNoiseMultiplier: { value: 6.0 },\n        uTexture: { value: S.texture },\n        uFlow: S.flowmap.uniform,\n        uRes: {\n          value: new Vec4(target.offsetWidth, target.offsetHeight, ah, av),\n        },\n      },\n    });\n\n    S.mesh = new Mesh(S.gl, { geometry: S.geometry, program: S.program });\n\n    window.addEventListener('resize', resize, false);\n    resize();\n\n    target.addEventListener('mousemove', updateMouse, false);\n\n    const update = (elapsed) => {\n      S.frameID = requestAnimationFrame(update);\n\n      if (!S.velocity.needsUpdate) {\n        S.velocity.set(0);\n      }\n\n      S.velocity.needsUpdate = false;\n\n      S.flowmap.aspect = S.aspect;\n      S.flowmap.mouse.copy(S.mouse);\n      S.flowmap.velocity.lerp(S.velocity, S.velocity.len() ? 0.15 : 0.1);\n      S.flowmap.update();\n\n      S.program.uniforms.uTime.value = elapsed * 0.01;\n\n      S.renderer.render({ scene: S.mesh });\n    };\n\n    S.frameID = requestAnimationFrame(update);\n    I.default.style.opacity = 0;\n\n    return this;\n  };\n\n  const destroy = () => {\n    cancelAnimationFrame(S.frameID);\n    I.default.style.opacity = '';\n    target.removeChild(S.canvas);\n\n    return this;\n  };\n\n  return { init, destroy };\n};\n","// Check if the module is initialised during server-side rendering\nconst isSSR = typeof window === 'undefined';\n\n/**\n * Simple throttling helper that limits a \n * function to only run once every {delay}ms\n * @param {Number} delay The delay in ms\n * @param {Function} fn the function to throttle\n */\nfunction throttled(delay, fn) {\n  let lastCall = 0;\n  return function(...args) {\n    const now = new Date().getTime();\n    if (now - lastCall < delay) {\n      return;\n    }\n    lastCall = now;\n    return fn(...args);\n  };\n}\n\n/**\n * Calculates the mean value in an array\n * @param {Array} arr The array to average\n */\nfunction getMean(arr) {\n  return Math.floor(arr.reduce((acc, curr) => {\n    return acc + curr;\n  }, 0) / arr.length);\n}\n\n/**\n * Main Tornis singleton class\n */\nclass Tornis {\n  // set a whole load of initial values\n  constructor() {\n\n    // Exit out if this is running server-side\n    if (isSSR) return;\n\n    this.lastX = 0;\n    this.lastY = 0;\n    this.lastWidth = window.innerWidth;\n    this.lastHeight = window.innerHeight;\n    this.lastMouseX = 0;\n    this.lastMouseY = 0;\n    this.lastWindowX = window.screenX;\n    this.lastWindowY = window.screenY;\n\n    // device orientation\n    this.lastAlpha = 0;\n    this.lastBeta = 0;\n    this.lastGamma = 0;\n    this.currAlpha = 0;\n    this.currBeta = 0;\n    this.currGamma = 0;\n\n    this.scrollHeight = document.body.scrollHeight;\n\n    this.scrollChange = false;\n    this.sizeChange = false;\n    this.mouseChange = false;\n    this.positionChange = false;\n    this.orientationChange = false;\n    this.devicePixelRatioChange = false;\n\n    this.currX = 0;\n    this.currY = 0;\n    this.currWidth = window.innerWidth;\n    this.currHeight = window.innerHeight;\n    this.currMouseX = 0;\n    this.currMouseY = 0;\n    this.currWindowX = 0;\n    \n    // device pixel ratio (where able)\n    this.currDevicePixelRatio = this.lastDevicePixelRatio = Math.max( window.devicePixelRatio || 1.0, 1.0 );\n    \n    // initialise array buffers for mouse velocity\n    this.mouseXVelocity = [];\n    this.mouseYVelocity = [];\n    this.lastMouseXVelocity = 0;\n    this.lastMouseYVelocity = 0;\n\n    // initialise array buffers for window velocity\n    this.windowXVelocity = [];\n    this.windowYVelocity = [];\n    this.lastWindowXVelocity = 0;\n    this.lastWindowYVelocity = 0;\n\n\n    // flag to limit rAF renders\n    this.updating = false;\n\n    // initialise the watched function queue\n    this.callbacks = [];\n\n    // bind this to ease class methods\n    this.update = this.update.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.handleMouse = this.handleMouse.bind(this);\n    this.handleOrientation = this.handleOrientation.bind(this);\n    this.recalibrateOrientation = this.recalibrateOrientation.bind(this);\n    this.formatData = this.formatData.bind(this);\n    this.watch = this.watch.bind(this);\n    this.unwatch = this.unwatch.bind(this);\n\n    // throttled event handlers\n    this.handleResize = throttled(110, this.handleResize); // resize is brutal, so throttle it more\n    this.handleMouse = throttled(75, this.handleMouse);\n\n    // bind event handlers to the window\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('mousemove', this.handleMouse);\n    window.addEventListener('deviceorientation', this.handleOrientation);\n\n    // begin the update loop\n    requestAnimationFrame(this.update);\n  }\n\n  /**\n   * Event handler to capture screen size\n   */\n  handleResize(e) {\n    this.currWidth = window.innerWidth;\n    this.currHeight = window.innerHeight;\n  }\n\n  /**\n   * Event handler to capture mouse position\n   */\n  handleMouse(e) {\n    this.currMouseX = e.clientX;\n    this.currMouseY = e.clientY;\n  }\n\n  /**\n   * Event handler to capture device orientation\n   */\n  handleOrientation(e) {\n    // cache initial position for calibration\n    if (!this.initialAlpha) { this.initialAlpha = e.alpha; }\n    if (!this.initialBeta) { this.initialBeta = e.beta; }\n    if (!this.initialGamma) { this.initialGamma = e.gamma; }\n    \n    this.currAlpha = e.alpha;\n    this.currBeta = e.beta;\n    this.currGamma = e.gamma;\n  }\n\n  /** \n   * Allow initial orientation to be reset to the last recorded values\n  */\n  recalibrateOrientation() {\n    // cache the old values\n    const calibration = {\n      prev: {\n        alpha: this.initialAlpha,\n        beta: this.initialBeta,\n        gamma: this.initialGamma,\n      }\n    };\n\n    // reset the values to the last recorded position\n    this.initialAlpha = this.lastAlpha;\n    this.initialBeta = this.lastBeta;\n    this.initialGamma = this.lastGamma;\n    \n    // add the new values to the cached calibration data\n    calibration.current = {\n      alpha: this.initialAlpha,\n      beta: this.initialBeta,\n      gamma: this.initialGamma,\n    };\n\n    return calibration;\n  }\n\n  /**\n   * Returns a copy of the store data, formatted for public use\n   */\n  formatData() {\n    return {\n      scroll: {\n        changed: this.scrollChange,\n        left: Math.floor(this.lastX),\n        right: Math.floor(this.lastX + this.lastWidth),\n        top: Math.floor(this.lastY),\n        bottom: Math.floor(this.lastY + this.lastHeight),\n        velocity: {\n          x: Math.floor(this.scrollXVelocity) || 0,\n          y: Math.floor(this.scrollYVelocity) || 0\n        }\n      },\n      size: {\n        changed: this.sizeChange,\n        x: Math.floor(this.lastWidth),\n        y: Math.floor(this.lastHeight),\n        docY: Math.floor(this.scrollHeight)\n      },\n      mouse: {\n        changed: this.mouseChange,\n        x: Math.floor(this.lastMouseX),\n        y: Math.floor(this.lastMouseY),\n        velocity: {\n          x: Math.floor(this.lastMouseXVelocity) || 0,\n          y: Math.floor(this.lastMouseYVelocity) || 0\n        }\n      },\n      position: {\n        changed: this.positionChange,\n        left: Math.floor(this.lastWindowX),\n        right: Math.floor(this.lastWindowX + this.lastWidth),\n        top: Math.floor(this.lastWindowY),\n        bottom: Math.floor(this.lastWindowY + this.lastHeight),\n        velocity: {\n          x: Math.floor(this.lastWindowXVelocity) || 0,\n          y: Math.floor(this.lastWindowYVelocity) || 0\n        }\n      },\n      orientation: {\n        changed: this.orientationChange,\n        // These values are relative to the first calibrated value\n        alpha: Math.floor(this.lastAlpha - this.initialAlpha) || 0,\n        beta: Math.floor(this.lastBeta - this.initialBeta) || 0,\n        gamma: Math.floor(this.lastGamma - this.initialGamma) || 0\n      },\n      devicePixelRatio: {\n        changed: this.devicePixelRatioChange,\n        ratio: this.currDevicePixelRatio\n      }\n    };\n  }\n\n  /**\n   * Update function to be looped by requestAnimationFrame\n   */\n  update() {\n    const {\n      currWidth,\n      currHeight,\n      currMouseX,\n      currMouseY,\n      currAlpha,\n      currBeta,\n      currGamma,\n      currDevicePixelRatio\n    } = this;\n    if (this.updating) return false;\n\n    // reset the flags\n    this.scrollChange = this.sizeChange = this.mouseChange = this.positionChange = this.orientationChange = this.devicePixelRatioChange = false;\n\n    // we need to grab a buffer of the last five values and average them\n    if (this.windowXVelocity.length > 5) { this.windowXVelocity.shift(); }\n    this.windowXVelocity.push(window.screenX - this.lastWindowX);\n\n    // see if the average velocity changed\n    if (getMean(this.windowXVelocity) != this.lastWindowXVelocity) {\n      this.lastWindowXVelocity = getMean(this.windowXVelocity);\n      this.positionChange = true;\n    }\n\n    // check window X position\n    if (window.screenX != this.lastWindowX) {\n      this.positionChange = true;\n      this.lastWindowX = window.screenX;\n    }\n\n    // we need to grab a buffer of the last five values and average them\n    if (this.windowYVelocity.length > 5) { this.windowYVelocity.shift(); }\n    this.windowYVelocity.push(window.screenY - this.lastWindowY);\n\n    // see if the average velocity changed\n    if (getMean(this.windowYVelocity) != this.lastWindowYVelocity) {\n      this.lastWindowYVelocity = getMean(this.windowYVelocity);\n      this.positionChange = true;\n    }\n\n    // check window Y position\n    if (window.screenY != this.lastWindowY) {\n      this.positionChange = true;\n      this.lastWindowY = window.screenY;\n    }\n    \n\n    // reset scroll X velocity\n    if (window.pageXOffset == this.lastX && this.scrollXVelocity != 0) {\n      this.scrollXVelocity = 0;\n      this.scrollChange = true;\n    }\n\n    // reset scroll Y velocity\n    if (window.pageYOffset == this.lastY && this.scrollYVelocity != 0) {\n      this.scrollYVelocity = 0;\n      this.scrollChange = true;\n    }\n    \n    // check scroll X\n    if (window.pageXOffset != this.lastX) {\n      this.scrollChange = true;\n      this.scrollXVelocity = Math.floor(window.pageXOffset - this.lastX);\n      this.lastX = window.pageXOffset;\n    }\n    \n    // check scroll Y\n    if (window.pageYOffset != this.lastY) {\n      this.scrollChange = true;\n      this.scrollYVelocity = Math.floor(window.pageYOffset - this.lastY);\n      this.lastY = window.pageYOffset;\n    }\n\n    // check width\n    if (currWidth != this.lastWidth) {\n      this.lastWidth = currWidth;\n      this.scrollHeight = document.body.scrollHeight;\n      this.sizeChange = true;\n    }\n\n    // check height\n    if (currHeight != this.lastHeight) {\n      this.lastHeight = currHeight;\n      this.sizeChange = true;\n    }\n\n    // Mouse input is throttled so in order to capture the velocity\n    // we need to grab a buffer of the last five values and average them\n    if (this.mouseXVelocity.length > 5) { this.mouseXVelocity.shift(); }\n    this.mouseXVelocity.push(currMouseX - this.lastMouseX);\n\n    // see if the average velocity changed\n    if (getMean(this.mouseXVelocity) != this.lastMouseXVelocity) {\n      this.lastMouseXVelocity = getMean(this.mouseXVelocity);\n      this.mouseChange = true;\n    }\n  \n    // check mouse X\n    if (currMouseX != this.lastMouseX) {\n      this.lastMouseX = currMouseX;\n      this.mouseChange = true;\n    }\n\n    // grab the mouse Y velocity\n    if (this.mouseYVelocity.length > 5) { this.mouseYVelocity.shift(); }\n    this.mouseYVelocity.push(currMouseY - this.lastMouseY);\n\n    // see if the average velocity changed\n    if (getMean(this.mouseYVelocity) != this.lastMouseYVelocity) {\n      this.lastMouseYVelocity = getMean(this.mouseYVelocity);\n      this.mouseChange = true;\n    }\n  \n    // check mouse y\n    if (currMouseY != this.lastMouseY || getMean(this.mouseYVelocity) != 0) {\n      this.lastMouseY = currMouseY;\n      this.mouseChange = true;\n    }\n\n    // orientation\n    if (currAlpha != this.lastAlpha) {\n      this.lastAlpha = currAlpha;\n      this.orientationChange = true;\n    }\n\n    if (currBeta != this.lastBeta) {\n      this.lastBeta = currBeta;\n      this.orientationChange = true;\n    }\n\n    if (currGamma != this.lastGamma) {\n      this.lastGamma = currGamma;\n      this.orientationChange = true;\n    }\n    \n    // device pixel ratio, but only if the window has moved\n    if ( this.positionChange || this.sizeChange )\n    {\n      this.currDevicePixelRatio = Math.max( window.devicePixelRatio || 1, 1 );\n      \n      if ( this.currDevicePixelRatio !== this.lastDevicePixelRatio )\n      {\n        this.devicePixelRatioChange = true;\n        this.lastDevicePixelRatio = this.currDevicePixelRatio;\n      }\n    }\n\n    // Finally, we can invoke the callbacks, but if something has changed\n    if (\n      this.scrollChange ||\n      this.sizeChange ||\n      this.mouseChange ||\n      this.positionChange ||\n      this.orientationChange ||\n      this.devicePixelRatioChange\n    ) {\n      // pass the formatted data into each watched function\n      this.callbacks.forEach(cb => cb(this.formatData()));\n    }\n\n    // reset and loop this method\n    this.updating = false;\n    requestAnimationFrame(this.update);\n  }\n\n  /**\n   * Subscribes a function to the 'watched functions' list.\n   * Watched functions will be automatically called on update\n   * @param {Function} callback The function to call on update\n   * @param {Boolean} callOnWatch Call the function on subscribe? defaults to true\n   */\n  watch(callback, callOnWatch = true) {\n    if (typeof callback !== 'function') {\n      throw new Error('Value passed to Watch is not a function');\n    }\n\n    // Exit out if this is running server-side\n    if (isSSR) return;\n\n    if (callOnWatch) {\n      // get a copy of the store\n      const firstRunData = this.formatData();\n\n      // Most watch functions will have guard clauses that check for change\n      // To cicumvent this, we simulate that all values have changed on first run\n      firstRunData.scroll.changed = true;\n      firstRunData.mouse.changed = true;\n      firstRunData.size.changed = true;\n      firstRunData.position.changed = true;\n      firstRunData.orientation.changed = true;\n      firstRunData.devicePixelRatio.changed = true;\n  \n      // run the callback using the simulated data\n      callback(firstRunData);\n    }\n\n    // push the callback to the queue to ensure it runs on future updates\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Unsubscribe a function from the 'watched functions' list\n   * @param {Function} callback The function to be removed\n   */\n  unwatch(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('The value passed to unwatch is not a function');\n    }\n\n    // Exit out if this is running server-side\n    if (isSSR) return;\n\n    // remove the callback from the list\n    this.callbacks = this.callbacks.filter(cb => cb !== callback);\n  }\n\n}\n\n\n// Create a singleton instance of Tornis\nconst TORNIS = new Tornis();\n\nif (!isSSR) {\n  // Expose a limited set of functions to a global, in order to allow access for basic script usage with <script>\n  window.__TORNIS = {\n    watchViewport: TORNIS.watch,\n    unwatchViewport: TORNIS.unwatch,\n    getViewportState: TORNIS.formatData,\n    recalibrateOrientation: TORNIS.recalibrateOrientation\n  };\n}\n\n// Export the Tornis API functions for ES6\nexport const watchViewport = TORNIS.watch;\nexport const unwatchViewport = TORNIS.unwatch;\nexport const getViewportState = TORNIS.formatData;\nexport const recalibrateOrientation = TORNIS.recalibrateOrientation;","import { Renderer, Program, Mesh, Geometry, Texture, Vec2, Vec4 } from 'ogl';\nimport { watchViewport } from 'tornis';\n\nimport { vert, frag } from '../utils';\n\nexport default (target) => {\n  const vertexShader = vert`\n      attribute vec2 uv;\n      attribute vec2 position;\n\n      varying vec2 vUv;\n\n      void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0.0, 1.0);\n      }\n    `;\n\n  const fragmentShader = frag`\n      precision highp float;\n\n      varying vec2 vUv;\n\n      uniform vec4 uRes;\n      uniform sampler2D uTexture;\n      uniform vec2 uVelocity;\n\n      const float PI         = 3.141592653;\n      const float HALF_PI    = PI / 2.0;\n      const float QUARTER_PI = PI / 4.0;\n\n      void main() {\n        vec2 uv = 0.5 * gl_FragCoord.xy / uRes.xy;\n        vec2 baseUV = (uv - vec2(0.5)) * uRes.zw + vec2(0.5);\n\n        float baseVelocity = clamp(uVelocity.y / 150.0, -1.0, 1.0);\n        float multiplier = pow(sin(vUv.y * PI), 2.0);\n        float velocity = baseVelocity * sin(vUv.x * HALF_PI + QUARTER_PI) * 0.75 * multiplier;\n\n        vec2 rUV = baseUV + vec2(0.0, velocity * 1.2);\n        vec2 gUV = baseUV + vec2(0.0, velocity * 1.4);\n        vec2 bUV = baseUV + vec2(0.0, velocity);\n\n        vec3 tex = vec3(\n          texture2D(uTexture, rUV).r,\n          texture2D(uTexture, gUV).g,\n          texture2D(uTexture, bUV).b\n        );\n\n        gl_FragColor = vec4(tex, 1.0);\n      }\n    `;\n\n  const I = {\n    default: target.querySelector('img'),\n  };\n\n  const S = {\n    frameID: -1,\n\n    mouse: new Vec2(0.5),\n    velocity: new Vec2(),\n\n    previousTime: null,\n    previousMouse: new Vec2(),\n\n    aspect: 1,\n    image: {\n      url: '',\n      size: {\n        x: I.default.offsetWidth,\n        y: I.default.offsetHeight,\n      },\n    },\n\n    renderer: null,\n    gl: null,\n    canvas: null,\n\n    geometry: null,\n    texture: null,\n    program: null,\n    mesh: null,\n  };\n\n  const updateViewport = ({ scroll }) => {\n    if (scroll.changed) {\n      const { y } = scroll.velocity;\n\n      S.velocity.y = y;\n    }\n  };\n\n  const computeAspect = () => {\n    const imageAspect = I.default.naturalHeight / I.default.naturalWidth;\n    const windowAspect = {\n      h: target.offsetHeight / target.offsetWidth,\n      v: target.offsetWidth / target.offsetHeight,\n    };\n\n    if (windowAspect.h < imageAspect) {\n      return { ah: 1, av: windowAspect.h / imageAspect };\n    }\n\n    return { ah: windowAspect.v * imageAspect, av: 1 };\n  };\n\n  const resize = () => {\n    const { ah, av } = computeAspect();\n\n    S.mesh.program.uniforms.uRes.value = new Vec4(\n      target.offsetWidth,\n      target.offsetHeight,\n      ah,\n      av\n    );\n\n    S.renderer.setSize(target.offsetWidth, target.offsetHeight);\n    S.aspect = target.offsetWidth / target.offsetHeight;\n  };\n\n  const init = () => {\n    S.renderer = new Renderer({\n      dpr: 2,\n      alpha: true,\n      premultipliedAlpha: true,\n    });\n\n    S.gl = S.renderer.gl;\n    S.canvas = S.gl.canvas;\n\n    S.canvas.classList.add('glsl-canvas', 'initialized');\n    target.appendChild(S.canvas);\n\n    S.geometry = new Geometry(S.gl, {\n      position: {\n        size: 2,\n        data: new Float32Array([-1, -1, 3, -1, -1, 3]),\n      },\n      uv: {\n        size: 2,\n        data: new Float32Array([0, 0, 2, 0, 0, 2]),\n      },\n    });\n\n    S.texture = new Texture(S.gl, {\n      minFilter: S.gl.LINEAR,\n      magFilter: S.gl.LINEAR,\n      premultiplyAlpha: true,\n    });\n\n    const img = new Image();\n\n    img.addEventListener('load', () => (S.texture.image = img));\n    img.src = I.default.src;\n\n    const { ah, av } = computeAspect();\n\n    S.program = new Program(S.gl, {\n      vertex: vertexShader,\n      fragment: fragmentShader,\n      uniforms: {\n        uTime: { value: 0 },\n        uTexture: { value: S.texture },\n        uRes: {\n          value: new Vec4(target.offsetWidth, target.offsetHeight, ah, av),\n        },\n        uVelocity: { value: new Vec2(0.0) },\n      },\n    });\n\n    S.mesh = new Mesh(S.gl, { geometry: S.geometry, program: S.program });\n\n    window.addEventListener('resize', resize, false);\n    resize();\n\n    watchViewport(updateViewport);\n\n    const update = (elapsed) => {\n      S.frameID = requestAnimationFrame(update);\n\n      S.program.uniforms.uTime.value = elapsed * 0.01;\n      S.program.uniforms.uVelocity.value.lerp(\n        S.velocity,\n        S.velocity.len() ? 0.15 : 0.1\n      );\n\n      window.value = S.program.uniforms.uVelocity.value;\n\n      S.renderer.render({ scene: S.mesh });\n    };\n\n    S.frameID = requestAnimationFrame(update);\n    I.default.style.opacity = 0.2;\n\n    return this;\n  };\n\n  const destroy = () => {\n    cancelAnimationFrame(S.frameID);\n    I.default.style.opacity = '';\n    target.removeChild(S.canvas);\n\n    return this;\n  };\n\n  return { init, destroy };\n};\n","import imagesLoaded from 'imagesloaded';\n\nimport DesktopApp from './shaders/desktop';\nimport MobileApp from './shaders/mobile';\n\nexport default class WaveEffect {\n  constructor(scope, options = {} /*! NOTE: Unused */) {\n    this.scope = scope;\n    this.elements =\n      typeof scope === 'string' ? document.querySelectorAll(scope) : scope;\n\n    this.options = options;\n\n    this.apps = [];\n  }\n\n  init() {\n    imagesLoaded(document.body, () => {\n      const touchSupported = 'ontouchstart' in document.documentElement;\n      const GLSLApp = touchSupported ? MobileApp : DesktopApp;\n\n      this.apps = [...this.elements].map((target) => {\n        const app = GLSLApp(target, this.options);\n\n        app.init();\n\n        return app;\n      });\n    });\n\n    return this;\n  }\n\n  destroy() {\n    this.apps.forEach((app) => app.destroy());\n    this.apps = [];\n\n    return this;\n  }\n}\n","import WaveEffect from './wave-effect';\n\nwindow.WaveEffect = WaveEffect;\n"]}